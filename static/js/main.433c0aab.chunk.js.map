{"version":3,"sources":["components/ProjectItem.jsx","pages/ProjectsPage.jsx","redux/types.js","components/AddComment.jsx","redux/actions.js","components/AddTodo.jsx","components/Modal.jsx","components/Comment.jsx","components/Comments.jsx","components/TodoItem.jsx","components/Search.jsx","components/TodoColumn.jsx","pages/TodosPage.jsx","App.js","features/todosSlice.js","redux/rootReducer.js","index.js"],"names":["ProjectItem","projectName","description","id","columns","console","log","navigate","useNavigate","onClick","evt","state","name","columnsIds","ProjectsPage","projects","useSelector","todos","projectsIds","allIds","map","item","project","byId","ADD_TODO","EDIT_TODO","CHANGE_TODO_COLUMN","REMOVE_TODO","SEARCH","ADD_COMMENT","AddComment","showModal","todoId","commentId","dispatch","useDispatch","useState","comment","setComment","setId","useEffect","nanoid","className","onSubmit","preventDefault","target","reset","string","type","addComment","placeholder","onChange","value","AddTodo","columnId","oldTodo","lastIndex","setNumber","title","setTitle","setDescription","setDate","timeTaken","setTimeTaken","setFinalDate","setPriority","setAttachedFiles","status","setStatus","setSubTodos","setComments","date","finalDate","priority","attachedFiles","subTodos","comments","number","todo","payload","editTodo","addTodo","nextStatus","nextColumnId","changeTodoColumn","Modal","props","children","onCloseModal","e","stopPropagation","Comment","showCommentModal","setShowCommentModal","text","Comments","commentsIds","showReplies","setShowReplies","postCommentsIds","postIds","i","TodoItem","showEditModal","setShowEditModal","removeTodo","Search","query","setQuery","queryType","setQueryType","inputType","setInputType","validationMessage","setValidationMessage","foundTodos","searchedTodos","search","TodoColumn","todosIds","showAddTodo","setShowAddTodo","TodosPage","useLocation","projectId","columnName","App","path","element","localStoredState","JSON","parse","localStorage","getItem","initialState","subtodos","rootReducer","combineReducers","action","stringify","columnsById","newState","Number","setItem","oldColumnsIds","newColumnsIds","oldColumnIdIndex","findIndex","nextOldColumnTodos","slice","nextTodos","todoIdIndex","columnIdIndex","nextColumnTodos","nextTodosIds","todosObject","todosList","Object","values","filter","toLowerCase","indexOf","length","newComment","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.433c0aab.chunk.js","sourcesContent":["import React from 'react'\nimport { useNavigate } from 'react-router-dom';\n\nexport default function ProjectItem({ projectName, description, id, columns }) {\n    console.log(columns)\n    const navigate = useNavigate();\n    const clickHandler = (evt) => {\n        navigate('/todo-app/todos', {\n            state: {\n                id: id,\n                name: projectName,\n                description: description,\n                columnsIds: columns\n            }\n        })\n    }\n    return (\n        <div onClick={clickHandler}>\n            <h2>{projectName}</h2>\n            <p>{description}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport ProjectItem from '../components/ProjectItem'\n\nexport default function ProjectsPage() {\n    let projects = useSelector(state => state.todos.projects);\n    let projectsIds = useSelector(state => state.todos.projects.allIds);\n    return (\n        <div>\n            <h1>Projects</h1>\n            {projectsIds.map(item => {\n                const project = projects.byId[item];\n                return <ProjectItem description={project.description} id={project.id} columns={project.columns} />\n            })}\n\n        </div>\n    )\n}\n","\nexport const ADD_TODO = 'TODOS/ADD_TODO'\nexport const EDIT_TODO = 'TODOS/EDIT_TODO'\nexport const CHANGE_TODO_COLUMN = 'TODOS/CHANGE_TODO_COLUMN'\nexport const REMOVE_TODO = 'TODOS/REMOVE_TODO'\nexport const SEARCH = 'TODOS/SEARCH'\nexport const ADD_COMMENT = 'TODOS/ADD_COMMENT'\n","import { nanoid } from 'nanoid';\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addComment } from '../redux/actions';\n\nexport default function AddComment({ showModal, todoId, commentId }) {\n    const dispatch = useDispatch();\n    const [comment, setComment] = useState('');\n\n    const [id, setId] = useState(\"\");\n    useEffect(() => {\n        setId(nanoid())\n    }, [])\n\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        evt.target.reset();\n        // reset form\n        showModal(false)\n        dispatch(addComment(comment, id, todoId, commentId))\n\n    }\n    return (\n        <form className=\"form\" onSubmit={handleSubmit}>\n            <label>\n                <input className=\"form__input\" placeholder=\"Comment\" onChange={(evt) => { setComment(evt.target.value) }} value={comment} />\n            </label>\n            <input type=\"submit\" />\n        </form>\n    )\n}\n","import {\n    ADD_TODO,\n    REMOVE_TODO,\n    EDIT_TODO,\n    CHANGE_TODO_COLUMN,\n    SEARCH,\n    ADD_COMMENT\n} from './types';\n\n\nexport function addTodo(id, todo, columnId) {\n    return {\n        type: ADD_TODO,\n        payload: {\n            id,\n            todo,\n            columnId\n        }\n    }\n}\n\nexport function editTodo(id, todo, columnId) {\n    return {\n        type: EDIT_TODO,\n        payload: {\n            id,\n            todo,\n            columnId\n        }\n    }\n}\n\nexport function changeTodoColumn(id, todo, columnId, nextColumnId) {\n    return {\n        type: CHANGE_TODO_COLUMN,\n        payload: {\n            id,\n            todo,\n            columnId,\n            nextColumnId\n        }\n    }\n}\nexport function removeTodo(id, columnId) {\n    return {\n        type: REMOVE_TODO,\n        payload: {\n            id,\n            columnId\n        }\n    }\n}\n\nexport function search(string, queryType) {\n    return {\n        type: SEARCH,\n        string,\n        queryType\n    }\n}\n\nexport function addComment(string, id, todoId, commentId) {\n    return {\n        type: ADD_COMMENT,\n        string,\n        id,\n        todoId,\n        commentId\n    }\n}","import { nanoid } from 'nanoid';\nimport React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodo, changeTodoColumn, editTodo } from '../redux/actions';\n\nexport default function AddTodo({ columnId, showModal, oldTodo, columnsIds }) {\n    let lastIndex = useSelector(state => state.todos.todos.lastIndex);\n    const dispatch = useDispatch();\n\n    const [id, setId] = useState(\"\");\n    const [number, setNumber] = useState(\"\");\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [date, setDate] = useState(\"\");\n    const [timeTaken, setTimeTaken] = useState(\"\");\n    const [finalDate, setFinalDate] = useState(\"\");\n    const [priority, setPriority] = useState(\"\");\n    const [attachedFiles, setAttachedFiles] = useState([]);\n    const [status, setStatus] = useState(\"\");\n    const [subTodos, setSubTodos] = useState([]);\n    const [comments, setComments] = useState([]);\n    console.log(lastIndex)\n    useEffect(() => {\n        if (oldTodo) {\n            setTitle(oldTodo.title);\n            setDescription(oldTodo.description);\n            setDate(oldTodo.date);\n            setTimeTaken(oldTodo.timeTaken);\n            setFinalDate(oldTodo.finalDate);\n            setPriority(oldTodo.priority);\n            setAttachedFiles(oldTodo.attachedFiles);\n            setStatus(oldTodo.status);\n            setSubTodos(oldTodo.subTodos);\n            setComments(oldTodo.comments)\n            setId(oldTodo.id)\n            setNumber(oldTodo.number)\n        } else {\n            setId(nanoid());\n            setStatus(columnId)\n        }\n\n    }, [])\n\n    const todo = {\n        id: id,\n        title: title,\n        number: lastIndex,\n        // description: \"bla bla\",\n        // date: \"05.02\",\n        // timeTaken: \"30\",\n        // finalDate: \"05.02\",\n        // priority: \"high, average, low\",\n        // attachedFiles: [1, 2, 3],\n        comments: [],\n        status: status,\n        // subTodos: [1, 2, 3],\n    }\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        evt.target.reset();\n        // reset form\n        showModal(false)\n        if (oldTodo) {\n            dispatch(editTodo(id, todo, status))\n        } else {\n            dispatch(addTodo(id, todo, status))\n        }\n    }\n    const changeTodoColumnHandler = (evt) => {\n        const nextStatus = evt.target.value;\n        setStatus(nextStatus)\n        if (oldTodo) {\n            dispatch(changeTodoColumn(id, todo, status, nextStatus))\n        }\n    }\n    return (\n\n        <div>\n            <form className=\"form\" onSubmit={handleSubmit}>\n                <label>\n                    <input className=\"form__input\" placeholder=\"Title\" onChange={(evt) => { setTitle(evt.target.value) }} value={title} />\n                </label>\n                <label>\n                    <input className=\"form__input\" placeholder=\"Description\" onChange={(evt) => { setDescription(evt.target.value) }} value={description} />\n                </label>\n                <label>\n                    <input className=\"form__input\" placeholder=\"Time taken\" onChange={(evt) => { setTimeTaken(evt.target.value) }} value={timeTaken} />\n                </label>\n                <label>\n                    <input className=\"form__input\" placeholder=\"Final date\" type=\"date\" onChange={(evt) => console.log(evt.target)} value={title} />\n                </label>\n                <select onChange={(evt) => { setPriority(evt.target.value) }}>\n                    <option value=\"\">--Choose priority--</option>\n                    <option value=\"high\">High</option>\n                    <option value=\"average\">Average</option>\n                    <option value=\"low\">Low</option>\n                </select>\n                <select onChange={changeTodoColumnHandler}\n                    value={status}>\n                    <option value=\"\">--Choose status--</option>\n                    <option value={columnsIds[0]}>Queue</option>\n                    <option value={columnsIds[1]}>Development</option>\n                    <option value={columnsIds[2]}>Done</option>\n                </select>\n                <label>\n                    <input type=\"file\" onChange={(evt) => { console.log(evt.target.value) }} />\n                </label>\n                <input type=\"submit\" />\n            </form>\n\n        </div>\n    )\n}\n","\n// import { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport '../scss/Modal.scss';\n// import { closeModal } from \"../store/modalSlice\";\n\nexport default function Modal(props) {\n    // const dispatch = useAppDispatch();\n    const type = props.type;\n    const children = props.children;\n    const title = props.title;\n\n    function onCloseModal() {\n        // dispatch(closeModal(type))\n    }\n\n    return (\n        <section className=\"modal\">\n            <div className=\"modal__overlay\" onClick={onCloseModal}>\n                <div className=\"modal__container\" onClick={e => e.stopPropagation()}>\n                    <button className=\"modal__button-close\" type=\"button\" aria-label=\"Закрыть окно\" onClick={onCloseModal}></button>\n                    <h2 className=\"modal__title\">{title}</h2>\n                    {children}\n                </div>\n            </div>\n        </section>\n    )\n}\n","import React, { useState } from 'react'\nimport AddComment from './AddComment';\nimport Comments from './Comments';\nimport Modal from './Modal';\n\nexport default function Comment({ todoId, comment }) {\n    // const { text, id } = comment;\n    const [showCommentModal, setShowCommentModal] = useState(false)\n    const clickHandler = () => {\n        setShowCommentModal(true)\n    }\n    return (\n        <div className='todo__comment'>\n            <div>{comment.text}</div>\n            <button className=\"button\" onClick={clickHandler}>reply</button>\n            <Comments todoId={todoId} comment={comment} />\n            {showCommentModal ?\n                <Modal title=\"Reply a comment\">\n                    <AddComment showModal={setShowCommentModal} todoId={todoId} commentId={comment.id} />\n                </Modal> : \"\"\n            }\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport Comment from './Comment';\n\n\nexport default function Comments({ todoId, comment }) {\n    const [showReplies, setShowReplies] = useState(true)\n    let postCommentsIds = useSelector(state => state.todos.comments.postIds);\n    let comments = useSelector(state => state.todos.comments.byId);\n    let commentsIds;\n    if (comment) {\n        commentsIds = comment.comments;\n    } else {\n        commentsIds = postCommentsIds;\n    }\n    useEffect(() => {\n        if (comment) {\n            setShowReplies(!showReplies)\n        }\n    }, [])\n\n    const showRepliesHandler = () => {\n        setShowReplies(!showReplies)\n    }\n    console.log(commentsIds)\n    return (\n        <>\n            {/* вот тут разобраться с отображением */}\n            {/* show/hide */}\n            {/* число комментариев */}\n            {!comment ? <div>Comments</div> : ''}\n            {comment && comment.comments ? <button className=\"button\" onClick={showRepliesHandler}>show replies</button> : ''}\n            <div>\n                {showReplies ?\n                    commentsIds.map(i => {\n                        const item = comments[i];\n                        return <Comment comment={item} todoId={todoId} />\n                    })\n                    : ''\n                }\n            </div>\n        </>\n    )\n}\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { removeTodo } from '../redux/actions';\nimport AddComment from './AddComment';\nimport AddTodo from './AddTodo';\nimport Comments from './Comments';\nimport Modal from './Modal';\n\nexport default function TodoItem({ todo, columnId, columnsIds }) {\n    const [showEditModal, setShowEditModal] = useState(false)\n    const [showCommentModal, setShowCommentModal] = useState(false)\n\n    const dispatch = useDispatch();\n\n    const handleAddComment = () => {\n        console.log('handleAddComment');\n        setShowCommentModal(true)\n    }\n    const handleAddSubtask = () => {\n        console.log('handleAddSubtask')\n    }\n    const handleDelete = () => {\n        console.log('handleDelete')\n        console.log(todo, todo.id)\n        dispatch(removeTodo(todo.id, columnId))\n    }\n    const handleEdit = () => {\n        console.log('handleEdit')\n        setShowEditModal(true)\n    }\n    console.log(columnsIds)\n    return (\n        <>\n            <div>\n                <div>{todo.number}</div>\n                <div>{todo.title}</div>\n                <div>{todo.description}</div>\n                <div> {todo.date}</div>\n                <div> {todo.timeTaken}</div>\n                <div> {todo.finalDate}</div>\n                <div> {todo.priority}</div>\n                <div> {todo.attachedFiles}</div>\n                <div> {todo.status}</div>\n                {/* <div> {todo.subTodos.map((item) => {\n                    return item\n                })}</div>\n                <div> {todo.comments.map((item) => {\n                    return item\n                })}</div> */}\n                <div>\n                    <button className=\"button\" onClick={handleAddComment}>add comment</button>\n                    <button className=\"button\" onClick={handleAddSubtask}>add subtask</button>\n                </div>\n\n                <div>\n                    <button className=\"button\" onClick={handleDelete}>delete</button>\n                    <button className=\"button\" onClick={handleEdit}>edit</button>\n                </div>\n            </div>\n            <Comments todoId={todo.id} />\n            {showEditModal ?\n                <Modal title=\"Edit todo\">\n                    <AddTodo columnId={columnId} showModal={setShowEditModal} oldTodo={todo} columnsIds={columnsIds} />\n                </Modal> : \"\"\n            }\n            {showCommentModal ?\n                <Modal title=\"Add a comment\">\n                    <AddComment showModal={setShowCommentModal} todoId={todo.id} />\n                </Modal> : \"\"\n            }\n        </>\n    )\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { search } from '../redux/actions';\nimport TodoItem from './TodoItem';\n\nexport default function Search() {\n    const [query, setQuery] = useState('');\n    const [queryType, setQueryType] = useState('title');\n    const [inputType, setInputType] = useState('text')\n    const [validationMessage, setValidationMessage] = useState('')\n\n    const dispatch = useDispatch();\n    let foundTodos = useSelector(state => state.todos.searchedTodos);\n    console.log(foundTodos)\n    const searchHandler = (evt) => {\n        evt.preventDefault();\n        if (query) {\n            dispatch(search(query, queryType));\n        } else {\n            setValidationMessage('Your search query is empty')\n        }\n    }\n    const selectChangeHandler = (evt) => {\n        setQueryType(evt.target.value);\n        if (evt.target.value === \"number\") {\n            setInputType(\"number\")\n        } else {\n            setInputType(\"text\")\n        }\n    }\n\n    return (\n        <>\n            <div>Search</div>\n            <form onSubmit={searchHandler}>\n                <input type={inputType} onChange={(evt) => {\n                    setQuery(evt.target.value)\n                }} value={query} />\n                <select onChange={selectChangeHandler}>\n                    <option value=\"title\">Search by title</option>\n                    <option value=\"number\">Search by number</option>\n                </select>\n                <div>{validationMessage}</div>\n                <input type=\"submit\" />\n            </form>\n            <div>\n                <h3>Found todos</h3>\n                {foundTodos.map(item => <TodoItem todo={item} />)}\n            </div>\n        </>\n\n    )\n}\n","import React from 'react'\nimport { useState } from 'react'\nimport { useSelector } from \"react-redux\";\nimport TodoItem from './TodoItem';\nimport Modal from './Modal'\nimport AddTodo from './AddTodo'\n\n\nexport default function TodoColumn({ title, id, todosIds, columnsIds }) {\n    let todos = useSelector(state => state.todos.todos);\n    const [showAddTodo, setShowAddTodo] = useState(false)\n    const addTodoClick = () => {\n        setShowAddTodo(!showAddTodo)\n    }\n    return (\n        <div className='todos__column'>\n            <h1>{title}</h1>\n            <button className=\"button\" onClick={addTodoClick}>Add todo</button>\n            <div className='todos__list'>\n                {todosIds.map(i => {\n                    const item = todos.byId[i];\n                    return <TodoItem todo={item} columnId={id} showModal={setShowAddTodo} columnsIds={columnsIds} />\n                })}\n\n            </div>\n            {showAddTodo ?\n                <Modal title=\"Add todo\">\n                    <AddTodo columnId={id} showModal={setShowAddTodo} columnsIds={columnsIds} />\n                </Modal> : \"\"}\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom'\nimport Search from '../components/Search';\nimport TodoColumn from '../components/TodoColumn';\n\n\nexport default function TodosPage() {\n    const location = useLocation();\n    const { name, description, id, columnsIds } = location.state;\n    let columns = useSelector(state => state.todos.columns);\n    console.log(id)\n    return (\n        <div>\n            <h2>{name}</h2>\n            <p>{description}</p>\n            <Search />\n            <div className='todos'>\n                {columnsIds.map(i => {\n                    const item = columns.byId[i];\n                    return <TodoColumn\n                        id={item.id}\n                        projectId={id}\n                        title={item.columnName}\n                        todosIds={item.todos}\n                        columnsIds={columnsIds}\n                    />\n                })}\n            </div>\n        </div>\n    )\n}\n","import {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport ProjectsPage from \"./pages/ProjectsPage\";\nimport TodosPage from \"./pages/TodosPage\";\nimport './App.scss';\n\nfunction App() {\n\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<ProjectsPage />} />\n        <Route path=\"/todo-app\" element={<ProjectsPage />} />\n        <Route path=\"todo-app/todos\" element={<TodosPage />} />\n      </Routes>\n    </Router>\n\n  );\n}\n\nexport default App;\n","\n\nimport {\n    ADD_TODO,\n    REMOVE_TODO,\n    EDIT_TODO,\n    CHANGE_TODO_COLUMN,\n    SEARCH,\n    ADD_COMMENT\n} from \"../redux/types\";\n\nconst localStoredState = JSON.parse(localStorage.getItem('state'));\nconst initialLocalState = {\n    projects: {\n        byId: {\n            \"4f90d13a40\": {\n                projectName: \"Book App\",\n                description: \"App for discovering new books and sharing opinin about the books you read\",\n                id: \"4f90d13a40\",\n                columns: [\"4f90d13a41\", \"4f90d13a42\", \"4f90d13a43\"]\n            },\n            \"4f90d13a44\": {\n                projectName: \"Pet Food App\",\n                description: \"App for ordering pet food and sharing opinion about it\",\n                id: \"4f90d13a41\",\n                columns: [\"4f90d13a45\", \"4f90d13a46\", \"4f90d13a47\"]\n            }\n        },\n        allIds: [\"4f90d13a40\", \"4f90d13a44\"]\n    },\n    columns: {\n        byId: {\n            \"4f90d13a41\": {\n                id: \"4f90d13a41\",\n                columnName: \"Queue\",\n                todos: [],\n            },\n            \"4f90d13a42\": {\n                id: \"4f90d13a42\",\n                columnName: \"Development\",\n                todos: [],\n            },\n            \"4f90d13a43\": {\n                id: \"4f90d13a43\",\n                columnName: \"Done\",\n                todos: [],\n            },\n            \"4f90d13a45\": {\n                id: \"4f90d13a45\",\n                columnName: \"Queue\",\n                todos: [],\n            },\n            \"4f90d13a46\": {\n                id: \"4f90d13a46\",\n                columnName: \"Development\",\n                todos: [],\n            },\n            \"4f90d13a47\": {\n                id: \"4f90d13a47\",\n                columnName: \"Done\",\n                todos: [],\n            },\n        },\n        allIds: [\"4f90d13a41\", \"4f90d13a42\", \"4f90d13a43\", \"4f90d13a45\", \"4f90d13a46\", \"4f90d13a47\"]\n    },\n    todos: {\n        byId: {},\n        allIds: [],\n        lastIndex: 1\n    },\n    subtodos: {\n        byId: {},\n        allIds: []\n    },\n    comments: {\n        byId: {},\n        postIds: [],\n        allIds: []\n    },\n    searchedTodos: [],\n}\n\nconst initialState = localStoredState ? { ...localStoredState } : { ...initialLocalState }\n\nexport const todosReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_TODO:\n            const string = (JSON.stringify(initialState));\n            const object = JSON.parse(string)\n            const { todo, columnId, id } = action.payload;\n            const columnsById = state.columns.byId;\n\n            const newState = {\n                ...state,\n                columns: {\n                    byId: {\n                        ...columnsById,\n                        [columnId]: {\n                            ...columnsById[columnId],\n                            todos: [...columnsById[columnId].todos, id]\n                        }\n                    }\n                },\n                todos: {\n                    ...state.todos,\n                    byId: {\n                        ...state.todos.byId,\n                        [id]: todo\n                    },\n                    allIds: [\n                        ...state.todos.allIds,\n                        id\n                    ],\n                    lastIndex: Number(state.todos.lastIndex) + 1\n                }\n            }\n            localStorage.setItem('state', JSON.stringify(newState))\n            return {\n                ...newState\n            }\n        case EDIT_TODO:\n            return (() => {\n                const { todo, columnId, id } = action.payload;\n                const newState = {\n                    ...state,\n                    todos: {\n                        ...state.todos,\n                        byId: {\n                            ...state.todos.byId,\n                            [id]: todo\n                        }\n                    }\n                }\n                localStorage.setItem('state', JSON.stringify(newState))\n                return {\n                    ...newState\n                }\n            })()\n        case CHANGE_TODO_COLUMN:\n            return (() => {\n                const { id, columnId, nextColumnId } = action.payload;\n                const columnsById = state.columns.byId;\n                const oldColumnsIds = state.columns.byId[columnId].todos;\n                const newColumnsIds = state.columns.byId[nextColumnId].todos;\n\n                const oldColumnIdIndex = oldColumnsIds.findIndex(item => item === id);\n\n                const nextOldColumnTodos = [\n                    ...oldColumnsIds.slice(0, oldColumnIdIndex),\n                    ...oldColumnsIds.slice(oldColumnIdIndex + 1)\n                ];\n\n                const newState = {\n                    ...state,\n                    columns: {\n                        byId: {\n                            ...columnsById,\n                            [columnId]: {\n                                ...columnsById[columnId],\n                                todos: nextOldColumnTodos\n                            },\n                            [nextColumnId]: {\n                                ...columnsById[nextColumnId],\n                                todos: [...newColumnsIds, id]\n                            }\n                        }\n                    },\n                    todos: {\n                        ...state.todos,\n                        byId: {\n                            ...state.todos.byId,\n                            [id]: {\n                                ...state.todos.byId[id],\n                                status: nextColumnId\n                            }\n                        },\n                    }\n\n                }\n                localStorage.setItem('state', JSON.stringify(newState))\n                return {\n                    ...newState\n                }\n            })()\n        case REMOVE_TODO:\n            return (() => {\n                const { columnId, id } = action.payload;\n                const columnsById = state.columns.byId;\n                const columnsIds = state.columns.byId[columnId].todos;\n                const todosIds = state.todos.allIds;\n                const todos = state.todos;\n\n                // измнененный объект с todo\n                const { [id]: _, ...nextTodos } = todos.byId;\n\n                // console.log(todos.byId)\n                const todoIdIndex = todosIds.findIndex(item => item === id);\n                const columnIdIndex = columnsIds.findIndex(item => item === id);\n\n                const nextColumnTodos = [\n                    ...columnsIds.slice(0, columnIdIndex),\n                    ...columnsIds.slice(columnIdIndex + 1)\n                ];\n                const nextTodosIds = [\n                    ...todosIds.slice(0, todoIdIndex),\n                    ...todosIds.slice(todoIdIndex + 1)\n                ];\n                const newState = {\n                    ...state,\n                    columns: {\n                        byId: {\n                            ...columnsById,\n                            [columnId]: {\n                                ...columnsById[columnId],\n                                todos: nextColumnTodos\n                            }\n                        }\n                    },\n\n                    todos: {\n                        ...state.todos,\n                        byId: {\n                            ...nextTodos\n                        },\n                        allIds: [\n                            ...nextTodosIds\n                        ]\n                    }\n\n                }\n                localStorage.setItem('state', JSON.stringify(newState))\n                return {\n                    ...newState\n                }\n            })()\n        case SEARCH:\n            return (() => {\n                const { string, queryType } = action;\n                const todosObject = { ...state.todos.byId };\n                const todosList = Object.values(todosObject);\n\n                let searchedTodos;\n                if (queryType === \"title\") {\n                    searchedTodos = [todosList.filter(item => {\n                        if (item.title.toLowerCase().indexOf(string.toLowerCase()) >= 0 || string.length <= 0) {\n                            return item;\n                        }\n                    })]\n                } else {\n                    searchedTodos = [todosList.filter(item => {\n                        if (item.number === Number(string)) {\n                            return item;\n                        }\n                    })]\n                }\n\n                return {\n                    ...state,\n                    searchedTodos: searchedTodos[0]\n                }\n            })();\n        case ADD_COMMENT:\n            return (() => {\n                const { string, id, todoId, commentId } = action;\n\n                const newComment = {\n                    text: string,\n                    id: id,\n                    comments: []\n                }\n                let newState;\n                // если комментарий на комментарий\n                if (commentId) {\n                    console.log(state.comments.byId, commentId)\n                    newState = {\n                        ...state,\n\n                        comments: {\n                            ...state.comments,\n                            byId: {\n                                ...state.comments.byId,\n                                [id]: newComment,\n                                [commentId]: {\n                                    ...state.comments.byId[commentId],\n                                    comments: [...state.comments.byId[commentId].comments, id]\n                                }\n                            },\n                            allIds: [\n                                ...state.comments.allIds, id\n                            ]\n                        }\n                    }\n                } else {\n\n                    newState = {\n                        ...state,\n\n                        todos: {\n                            ...state.todos,\n                            byId: {\n                                ...state.todos.byId,\n                                [todoId]: {\n                                    ...state.todos.byId[todoId],\n                                    comments: [...state.todos.byId[todoId].comments, id]\n                                }\n                            },\n                        },\n                        comments: {\n                            ...state.comments,\n                            byId: {\n                                ...state.comments.byId,\n                                [id]: newComment\n                            },\n                            allIds: [\n                                ...state.comments.allIds, id\n                            ],\n                            postIds: [\n                                ...state.comments.allIds, id\n                            ]\n                        }\n                    }\n                }\n                localStorage.setItem('state', JSON.stringify(newState))\n                return {\n                    ...newState\n                }\n            })()\n        default:\n            return state;\n    }\n\n}","import { combineReducers } from \"redux\";\nimport { todosReducer } from \"../features/todosSlice\";\n\nexport const rootReducer = combineReducers({\n    todos: todosReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { rootReducer } from './redux/rootReducer';\nimport { createStore, compose, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport './reset.scss';\n\nconst store = createStore(rootReducer, composeWithDevTools(\n  applyMiddleware(\n    // saga\n  ),\n))\n\nReactDOM.render(\n  // харнилище - стор\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}