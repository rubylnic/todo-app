{"version":3,"sources":["components/ProjectItem.jsx","pages/ProjectsPage.jsx","redux/types.js","components/AddComment.jsx","redux/actions.js","components/AddTodo.jsx","components/Modal.jsx","components/Comment.jsx","components/Comments.jsx","components/TodoItem.jsx","components/Search.jsx","components/TodoColumn.jsx","pages/TodosPage.jsx","App.js","features/todosSlice.js","redux/rootReducer.js","index.js"],"names":["ProjectItem","projectName","description","id","columns","navigate","useNavigate","onClick","evt","state","ProjectsPage","projects","useSelector","todos","projectsIds","allIds","map","item","project","byId","ADD_TODO","EDIT_TODO","CHANGE_TODO_COLUMN","REMOVE_TODO","SEARCH","ADD_COMMENT","AddComment","showModal","todoId","commentId","dispatch","useDispatch","useState","comment","setComment","setId","useEffect","nanoid","className","onSubmit","preventDefault","target","reset","string","type","addComment","placeholder","onChange","value","AddTodo","columnId","oldTodo","columnsIds","lastIndex","setNumber","title","setTitle","setDescription","setDate","timeTaken","setTimeTaken","setFinalDate","setPriority","setAttachedFiles","status","setStatus","setSubTodos","setComments","console","log","date","finalDate","priority","attachedFiles","subTodos","comments","number","todo","payload","editTodo","addTodo","nextStatus","nextColumnId","changeTodoColumn","Modal","props","children","onCloseModal","e","stopPropagation","Comment","showCommentModal","setShowCommentModal","text","Comments","commentsIds","showReplies","setShowReplies","postCommentsIds","postIds","i","TodoItem","showEditModal","setShowEditModal","removeTodo","Search","query","setQuery","queryType","setQueryType","inputType","setInputType","validationMessage","setValidationMessage","foundTodos","searchedTodos","search","TodoColumn","todosIds","showAddTodo","setShowAddTodo","TodosPage","location","useLocation","projectId","useParams","projectInfo","columnsArr","columnName","App","basename","path","element","localStoredState","JSON","parse","localStorage","getItem","initialState","subtodos","rootReducer","combineReducers","action","stringify","columnsById","newState","Number","setItem","oldColumnsIds","newColumnsIds","oldColumnIdIndex","findIndex","nextOldColumnTodos","slice","nextTodos","todoIdIndex","columnIdIndex","nextColumnTodos","nextTodosIds","todosObject","todosList","Object","values","filter","toLowerCase","indexOf","length","newComment","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16af221c.chunk.js","sourcesContent":["import React from 'react'\nimport { useNavigate } from 'react-router-dom';\n\nexport default function ProjectItem({ projectName, description, id, columns }) {\n    const navigate = useNavigate();\n    const clickHandler = (evt) => {\n        navigate(`/todo-app/todos/${id}`, {\n            state: {\n                id: id,\n                projectName: projectName,\n                description: description,\n                columns: columns\n            }\n        })\n    }\n    return (\n        <div onClick={clickHandler}>\n            <h2>{projectName}</h2>\n            <p>{description}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport ProjectItem from '../components/ProjectItem'\n\nexport default function ProjectsPage() {\n    let projects = useSelector(state => state.todos.projects);\n    let projectsIds = useSelector(state => state.todos.projects.allIds);\n    return (\n        <div>\n            <h1>Projects</h1>\n            {projectsIds.map(item => {\n                const project = projects.byId[item];\n                return <ProjectItem description={project.description} id={project.id} columns={project.columns} />\n            })}\n\n        </div>\n    )\n}\n","\nexport const ADD_TODO = 'TODOS/ADD_TODO'\nexport const EDIT_TODO = 'TODOS/EDIT_TODO'\nexport const CHANGE_TODO_COLUMN = 'TODOS/CHANGE_TODO_COLUMN'\nexport const REMOVE_TODO = 'TODOS/REMOVE_TODO'\nexport const SEARCH = 'TODOS/SEARCH'\nexport const ADD_COMMENT = 'TODOS/ADD_COMMENT'\n","import { nanoid } from 'nanoid';\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addComment } from '../redux/actions';\n\nexport default function AddComment({ showModal, todoId, commentId }) {\n    const dispatch = useDispatch();\n    const [comment, setComment] = useState('');\n\n    const [id, setId] = useState(\"\");\n    useEffect(() => {\n        setId(nanoid())\n    }, [])\n\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        evt.target.reset();\n        // reset form\n        showModal(false)\n        dispatch(addComment(comment, id, todoId, commentId))\n\n    }\n    return (\n        <form className=\"form\" onSubmit={handleSubmit}>\n            <label>\n                <input className=\"form__input\" placeholder=\"Comment\" onChange={(evt) => { setComment(evt.target.value) }} value={comment} />\n            </label>\n            <input type=\"submit\" />\n        </form>\n    )\n}\n","import {\n    ADD_TODO,\n    REMOVE_TODO,\n    EDIT_TODO,\n    CHANGE_TODO_COLUMN,\n    SEARCH,\n    ADD_COMMENT\n} from './types';\n\n\nexport function addTodo(id, todo, columnId) {\n    return {\n        type: ADD_TODO,\n        payload: {\n            id,\n            todo,\n            columnId\n        }\n    }\n}\n\nexport function editTodo(id, todo, columnId) {\n    return {\n        type: EDIT_TODO,\n        payload: {\n            id,\n            todo,\n            columnId\n        }\n    }\n}\n\nexport function changeTodoColumn(id, todo, columnId, nextColumnId) {\n    return {\n        type: CHANGE_TODO_COLUMN,\n        payload: {\n            id,\n            todo,\n            columnId,\n            nextColumnId\n        }\n    }\n}\nexport function removeTodo(id, columnId) {\n    return {\n        type: REMOVE_TODO,\n        payload: {\n            id,\n            columnId\n        }\n    }\n}\n\nexport function search(string, queryType) {\n    return {\n        type: SEARCH,\n        string,\n        queryType\n    }\n}\n\nexport function addComment(string, id, todoId, commentId) {\n    return {\n        type: ADD_COMMENT,\n        string,\n        id,\n        todoId,\n        commentId\n    }\n}","import { nanoid } from 'nanoid';\nimport React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodo, changeTodoColumn, editTodo } from '../redux/actions';\n\nexport default function AddTodo({ columnId, showModal, oldTodo, columnsIds }) {\n    let lastIndex = useSelector(state => state.todos.todos.lastIndex);\n    const dispatch = useDispatch();\n\n    const [id, setId] = useState(\"\");\n    const [number, setNumber] = useState(\"\");\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [date, setDate] = useState(\"\");\n    const [timeTaken, setTimeTaken] = useState(\"\");\n    const [finalDate, setFinalDate] = useState(\"\");\n    const [priority, setPriority] = useState(\"\");\n    const [attachedFiles, setAttachedFiles] = useState([]);\n    const [status, setStatus] = useState(\"\");\n    const [subTodos, setSubTodos] = useState([]);\n    const [comments, setComments] = useState([]);\n    console.log(lastIndex)\n    useEffect(() => {\n        if (oldTodo) {\n            setTitle(oldTodo.title);\n            setDescription(oldTodo.description);\n            setDate(oldTodo.date);\n            setTimeTaken(oldTodo.timeTaken);\n            setFinalDate(oldTodo.finalDate);\n            setPriority(oldTodo.priority);\n            setAttachedFiles(oldTodo.attachedFiles);\n            setStatus(oldTodo.status);\n            setSubTodos(oldTodo.subTodos);\n            setComments(oldTodo.comments)\n            setId(oldTodo.id)\n            setNumber(oldTodo.number)\n        } else {\n            setId(nanoid());\n            setStatus(columnId)\n        }\n\n    }, [])\n\n    const todo = {\n        id: id,\n        title: title,\n        number: lastIndex,\n        // description: \"bla bla\",\n        // date: \"05.02\",\n        // timeTaken: \"30\",\n        // finalDate: \"05.02\",\n        // priority: \"high, average, low\",\n        // attachedFiles: [1, 2, 3],\n        comments: [],\n        status: status,\n        // subTodos: [1, 2, 3],\n    }\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        evt.target.reset();\n        // reset form\n        showModal(false)\n        if (oldTodo) {\n            dispatch(editTodo(id, todo, status))\n        } else {\n            dispatch(addTodo(id, todo, status))\n        }\n    }\n    const changeTodoColumnHandler = (evt) => {\n        const nextStatus = evt.target.value;\n        setStatus(nextStatus)\n        if (oldTodo) {\n            dispatch(changeTodoColumn(id, todo, status, nextStatus))\n        }\n    }\n    return (\n\n        <div>\n            <form className=\"form\" onSubmit={handleSubmit}>\n                <label>\n                    <input className=\"form__input\" placeholder=\"Title\" onChange={(evt) => { setTitle(evt.target.value) }} value={title} />\n                </label>\n                <label>\n                    <input className=\"form__input\" placeholder=\"Description\" onChange={(evt) => { setDescription(evt.target.value) }} value={description} />\n                </label>\n                <label>\n                    <input className=\"form__input\" placeholder=\"Time taken\" onChange={(evt) => { setTimeTaken(evt.target.value) }} value={timeTaken} />\n                </label>\n                <label>\n                    <input className=\"form__input\" placeholder=\"Final date\" type=\"date\" onChange={(evt) => console.log(evt.target)} value={title} />\n                </label>\n                <select onChange={(evt) => { setPriority(evt.target.value) }}>\n                    <option value=\"\">--Choose priority--</option>\n                    <option value=\"high\">High</option>\n                    <option value=\"average\">Average</option>\n                    <option value=\"low\">Low</option>\n                </select>\n                <select onChange={changeTodoColumnHandler}\n                    value={status}>\n                    <option value=\"\">--Choose status--</option>\n                    <option value={columnsIds[0]}>Queue</option>\n                    <option value={columnsIds[1]}>Development</option>\n                    <option value={columnsIds[2]}>Done</option>\n                </select>\n                <label>\n                    <input type=\"file\" onChange={(evt) => { console.log(evt.target.value) }} />\n                </label>\n                <input type=\"submit\" />\n            </form>\n\n        </div>\n    )\n}\n","\n// import { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport '../scss/Modal.scss';\n// import { closeModal } from \"../store/modalSlice\";\n\nexport default function Modal(props) {\n    // const dispatch = useAppDispatch();\n    const type = props.type;\n    const children = props.children;\n    const title = props.title;\n\n    function onCloseModal() {\n        // dispatch(closeModal(type))\n    }\n\n    return (\n        <section className=\"modal\">\n            <div className=\"modal__overlay\" onClick={onCloseModal}>\n                <div className=\"modal__container\" onClick={e => e.stopPropagation()}>\n                    <button className=\"modal__button-close\" type=\"button\" aria-label=\"Закрыть окно\" onClick={onCloseModal}></button>\n                    <h2 className=\"modal__title\">{title}</h2>\n                    {children}\n                </div>\n            </div>\n        </section>\n    )\n}\n","import React, { useState } from 'react'\nimport AddComment from './AddComment';\nimport Comments from './Comments';\nimport Modal from './Modal';\n\nexport default function Comment({ todoId, comment }) {\n    // const { text, id } = comment;\n    const [showCommentModal, setShowCommentModal] = useState(false)\n    const clickHandler = () => {\n        setShowCommentModal(true)\n    }\n    return (\n        <div className='todo__comment'>\n            <div>{comment.text}</div>\n            <button className=\"button\" onClick={clickHandler}>reply</button>\n            <Comments todoId={todoId} comment={comment} />\n            {showCommentModal ?\n                <Modal title=\"Reply a comment\">\n                    <AddComment showModal={setShowCommentModal} todoId={todoId} commentId={comment.id} />\n                </Modal> : \"\"\n            }\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport Comment from './Comment';\n\n\nexport default function Comments({ todoId, comment }) {\n    const [showReplies, setShowReplies] = useState(true)\n    let postCommentsIds = useSelector(state => state.todos.comments.postIds);\n    let comments = useSelector(state => state.todos.comments.byId);\n    let commentsIds;\n    if (comment) {\n        commentsIds = comment.comments;\n    } else {\n        commentsIds = postCommentsIds;\n    }\n    useEffect(() => {\n        if (comment) {\n            setShowReplies(!showReplies)\n        }\n    }, [])\n\n    const showRepliesHandler = () => {\n        setShowReplies(!showReplies)\n    }\n    console.log(commentsIds)\n    return (\n        <>\n            {/* вот тут разобраться с отображением */}\n            {/* show/hide */}\n            {/* число комментариев */}\n            {!comment ? <div>Comments</div> : ''}\n            {comment && comment.comments ? <button className=\"button\" onClick={showRepliesHandler}>show replies</button> : ''}\n            <div>\n                {showReplies ?\n                    commentsIds.map(i => {\n                        const item = comments[i];\n                        return <Comment comment={item} todoId={todoId} />\n                    })\n                    : ''\n                }\n            </div>\n        </>\n    )\n}\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { removeTodo } from '../redux/actions';\nimport AddComment from './AddComment';\nimport AddTodo from './AddTodo';\nimport Comments from './Comments';\nimport Modal from './Modal';\n\nexport default function TodoItem({ todo, columnId, columnsIds }) {\n    const [showEditModal, setShowEditModal] = useState(false)\n    const [showCommentModal, setShowCommentModal] = useState(false)\n\n    const dispatch = useDispatch();\n\n    const handleAddComment = () => {\n        console.log('handleAddComment');\n        setShowCommentModal(true)\n    }\n    const handleAddSubtask = () => {\n        console.log('handleAddSubtask')\n    }\n    const handleDelete = () => {\n        console.log('handleDelete')\n        console.log(todo, todo.id)\n        dispatch(removeTodo(todo.id, columnId))\n    }\n    const handleEdit = () => {\n        console.log('handleEdit')\n        setShowEditModal(true)\n    }\n    console.log(columnsIds)\n    return (\n        <>\n            <div>\n                <div>{todo.number}</div>\n                <div>{todo.title}</div>\n                <div>{todo.description}</div>\n                <div> {todo.date}</div>\n                <div> {todo.timeTaken}</div>\n                <div> {todo.finalDate}</div>\n                <div> {todo.priority}</div>\n                <div> {todo.attachedFiles}</div>\n                <div> {todo.status}</div>\n                {/* <div> {todo.subTodos.map((item) => {\n                    return item\n                })}</div>\n                <div> {todo.comments.map((item) => {\n                    return item\n                })}</div> */}\n                <div>\n                    <button className=\"button\" onClick={handleAddComment}>add comment</button>\n                    <button className=\"button\" onClick={handleAddSubtask}>add subtask</button>\n                </div>\n\n                <div>\n                    <button className=\"button\" onClick={handleDelete}>delete</button>\n                    <button className=\"button\" onClick={handleEdit}>edit</button>\n                </div>\n            </div>\n            <Comments todoId={todo.id} />\n            {showEditModal ?\n                <Modal title=\"Edit todo\">\n                    <AddTodo columnId={columnId} showModal={setShowEditModal} oldTodo={todo} columnsIds={columnsIds} />\n                </Modal> : \"\"\n            }\n            {showCommentModal ?\n                <Modal title=\"Add a comment\">\n                    <AddComment showModal={setShowCommentModal} todoId={todo.id} />\n                </Modal> : \"\"\n            }\n        </>\n    )\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { search } from '../redux/actions';\nimport TodoItem from './TodoItem';\n\nexport default function Search() {\n    const [query, setQuery] = useState('');\n    const [queryType, setQueryType] = useState('title');\n    const [inputType, setInputType] = useState('text')\n    const [validationMessage, setValidationMessage] = useState('')\n\n    const dispatch = useDispatch();\n    let foundTodos = useSelector(state => state.todos.searchedTodos);\n    console.log(foundTodos)\n    const searchHandler = (evt) => {\n        evt.preventDefault();\n        if (query) {\n            dispatch(search(query, queryType));\n        } else {\n            setValidationMessage('Your search query is empty')\n        }\n    }\n    const selectChangeHandler = (evt) => {\n        setQueryType(evt.target.value);\n        if (evt.target.value === \"number\") {\n            setInputType(\"number\")\n        } else {\n            setInputType(\"text\")\n        }\n    }\n\n    return (\n        <>\n            <div>Search</div>\n            <form onSubmit={searchHandler}>\n                <input type={inputType} onChange={(evt) => {\n                    setQuery(evt.target.value)\n                }} value={query} />\n                <select onChange={selectChangeHandler}>\n                    <option value=\"title\">Search by title</option>\n                    <option value=\"number\">Search by number</option>\n                </select>\n                <div>{validationMessage}</div>\n                <input type=\"submit\" />\n            </form>\n            <div>\n                <h3>Found todos</h3>\n                {foundTodos.map(item => <TodoItem todo={item} />)}\n            </div>\n        </>\n\n    )\n}\n","import React from 'react'\nimport { useState } from 'react'\nimport { useSelector } from \"react-redux\";\nimport TodoItem from './TodoItem';\nimport Modal from './Modal'\nimport AddTodo from './AddTodo'\n\n\nexport default function TodoColumn({ title, id, todosIds, columnsIds }) {\n    let todos = useSelector(state => state.todos.todos);\n    const [showAddTodo, setShowAddTodo] = useState(false)\n    const addTodoClick = () => {\n        setShowAddTodo(!showAddTodo)\n    }\n    return (\n        <div className='todos__column'>\n            <h1>{title}</h1>\n            <button className=\"button\" onClick={addTodoClick}>Add todo</button>\n            <div className='todos__list'>\n                {todosIds.map(i => {\n                    const item = todos.byId[i];\n                    return <TodoItem todo={item} columnId={id} showModal={setShowAddTodo} columnsIds={columnsIds} />\n                })}\n\n            </div>\n            {showAddTodo ?\n                <Modal title=\"Add todo\">\n                    <AddTodo columnId={id} showModal={setShowAddTodo} columnsIds={columnsIds} />\n                </Modal> : \"\"}\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport { useLocation, useParams } from 'react-router-dom'\nimport Search from '../components/Search';\nimport TodoColumn from '../components/TodoColumn';\n\n\nexport default function TodosPage() {\n    const location = useLocation();\n    const params = useParams();\n    const projectId = params.id;\n    let projectInfo = useSelector(state => state.todos.projects.byId)[projectId];\n    let projectName, description, id, columns;\n\n    if (projectInfo) {\n        projectName = projectInfo.projectName;\n        description = projectInfo.description;\n        id = projectInfo.id;\n        columns = projectInfo.columns;\n    } else {\n        projectName = location.state.projectName;\n        description = location.state.description;\n        id = location.state.id;\n        columns = location.state.columns;\n    }\n\n\n    console.log(projectInfo)\n\n    let columnsArr = useSelector(state => state.todos.columns);\n\n    return (\n        <div>\n            <h2>{projectName}</h2>\n            <p>{description}</p>\n            <Search />\n            <div className='todos'>\n                {columns.map(i => {\n                    const item = columnsArr.byId[i];\n                    return <TodoColumn\n                        id={item.id}\n                        projectId={id}\n                        title={item.columnName}\n                        todosIds={item.todos}\n                        columnsIds={columns}\n                    />\n                })}\n            </div>\n        </div>\n    )\n}\n","import {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport ProjectsPage from \"./pages/ProjectsPage\";\nimport TodosPage from \"./pages/TodosPage\";\nimport './App.scss';\n\nfunction App() {\n\n\n  return (\n    <Router basename=\"/todo-app\">\n      <Routes>\n        <Route path=\"/\" element={<ProjectsPage />} />\n        <Route path=\"/todo-app\" element={<ProjectsPage />} />\n        <Route path=\"todo-app/todos/:id\" element={<TodosPage />} />\n      </Routes>\n    </Router>\n\n  );\n}\n\nexport default App;\n","\n\nimport {\n    ADD_TODO,\n    REMOVE_TODO,\n    EDIT_TODO,\n    CHANGE_TODO_COLUMN,\n    SEARCH,\n    ADD_COMMENT\n} from \"../redux/types\";\n\nconst localStoredState = JSON.parse(localStorage.getItem('state'));\nconst initialLocalState = {\n    projects: {\n        byId: {\n            \"4f90d13a40\": {\n                projectName: \"Book App\",\n                description: \"App for discovering new books and sharing opinin about the books you read\",\n                id: \"4f90d13a40\",\n                columns: [\"4f90d13a41\", \"4f90d13a42\", \"4f90d13a43\"]\n            },\n            \"4f90d13a44\": {\n                projectName: \"Pet Food App\",\n                description: \"App for ordering pet food and sharing opinion about it\",\n                id: \"4f90d13a41\",\n                columns: [\"4f90d13a45\", \"4f90d13a46\", \"4f90d13a47\"]\n            }\n        },\n        allIds: [\"4f90d13a40\", \"4f90d13a44\"]\n    },\n    columns: {\n        byId: {\n            \"4f90d13a41\": {\n                id: \"4f90d13a41\",\n                columnName: \"Queue\",\n                todos: [],\n            },\n            \"4f90d13a42\": {\n                id: \"4f90d13a42\",\n                columnName: \"Development\",\n                todos: [],\n            },\n            \"4f90d13a43\": {\n                id: \"4f90d13a43\",\n                columnName: \"Done\",\n                todos: [],\n            },\n            \"4f90d13a45\": {\n                id: \"4f90d13a45\",\n                columnName: \"Queue\",\n                todos: [],\n            },\n            \"4f90d13a46\": {\n                id: \"4f90d13a46\",\n                columnName: \"Development\",\n                todos: [],\n            },\n            \"4f90d13a47\": {\n                id: \"4f90d13a47\",\n                columnName: \"Done\",\n                todos: [],\n            },\n        },\n        allIds: [\"4f90d13a41\", \"4f90d13a42\", \"4f90d13a43\", \"4f90d13a45\", \"4f90d13a46\", \"4f90d13a47\"]\n    },\n    todos: {\n        byId: {},\n        allIds: [],\n        lastIndex: 1\n    },\n    subtodos: {\n        byId: {},\n        allIds: []\n    },\n    comments: {\n        byId: {},\n        postIds: [],\n        allIds: []\n    },\n    searchedTodos: [],\n}\n\nconst initialState = localStoredState ? { ...localStoredState } : { ...initialLocalState };\n\nexport const todosReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_TODO:\n            const string = (JSON.stringify(initialState));\n            const object = JSON.parse(string)\n            const { todo, columnId, id } = action.payload;\n            const columnsById = state.columns.byId;\n\n            const newState = {\n                ...state,\n                columns: {\n                    byId: {\n                        ...columnsById,\n                        [columnId]: {\n                            ...columnsById[columnId],\n                            todos: [...columnsById[columnId].todos, id]\n                        }\n                    }\n                },\n                todos: {\n                    ...state.todos,\n                    byId: {\n                        ...state.todos.byId,\n                        [id]: todo\n                    },\n                    allIds: [\n                        ...state.todos.allIds,\n                        id\n                    ],\n                    lastIndex: Number(state.todos.lastIndex) + 1\n                }\n            }\n            localStorage.setItem('state', JSON.stringify(newState))\n            return {\n                ...newState\n            }\n        case EDIT_TODO:\n            return (() => {\n                const { todo, columnId, id } = action.payload;\n                const newState = {\n                    ...state,\n                    todos: {\n                        ...state.todos,\n                        byId: {\n                            ...state.todos.byId,\n                            [id]: todo\n                        }\n                    }\n                }\n                localStorage.setItem('state', JSON.stringify(newState))\n                return {\n                    ...newState\n                }\n            })()\n        case CHANGE_TODO_COLUMN:\n            return (() => {\n                const { id, columnId, nextColumnId } = action.payload;\n                const columnsById = state.columns.byId;\n                const oldColumnsIds = state.columns.byId[columnId].todos;\n                const newColumnsIds = state.columns.byId[nextColumnId].todos;\n\n                const oldColumnIdIndex = oldColumnsIds.findIndex(item => item === id);\n\n                const nextOldColumnTodos = [\n                    ...oldColumnsIds.slice(0, oldColumnIdIndex),\n                    ...oldColumnsIds.slice(oldColumnIdIndex + 1)\n                ];\n\n                const newState = {\n                    ...state,\n                    columns: {\n                        byId: {\n                            ...columnsById,\n                            [columnId]: {\n                                ...columnsById[columnId],\n                                todos: nextOldColumnTodos\n                            },\n                            [nextColumnId]: {\n                                ...columnsById[nextColumnId],\n                                todos: [...newColumnsIds, id]\n                            }\n                        }\n                    },\n                    todos: {\n                        ...state.todos,\n                        byId: {\n                            ...state.todos.byId,\n                            [id]: {\n                                ...state.todos.byId[id],\n                                status: nextColumnId\n                            }\n                        },\n                    }\n\n                }\n                localStorage.setItem('state', JSON.stringify(newState))\n                return {\n                    ...newState\n                }\n            })()\n        case REMOVE_TODO:\n            return (() => {\n                const { columnId, id } = action.payload;\n                const columnsById = state.columns.byId;\n                const columnsIds = state.columns.byId[columnId].todos;\n                const todosIds = state.todos.allIds;\n                const todos = state.todos;\n\n                // измнененный объект с todo\n                const { [id]: _, ...nextTodos } = todos.byId;\n\n                // console.log(todos.byId)\n                const todoIdIndex = todosIds.findIndex(item => item === id);\n                const columnIdIndex = columnsIds.findIndex(item => item === id);\n\n                const nextColumnTodos = [\n                    ...columnsIds.slice(0, columnIdIndex),\n                    ...columnsIds.slice(columnIdIndex + 1)\n                ];\n                const nextTodosIds = [\n                    ...todosIds.slice(0, todoIdIndex),\n                    ...todosIds.slice(todoIdIndex + 1)\n                ];\n                const newState = {\n                    ...state,\n                    columns: {\n                        byId: {\n                            ...columnsById,\n                            [columnId]: {\n                                ...columnsById[columnId],\n                                todos: nextColumnTodos\n                            }\n                        }\n                    },\n\n                    todos: {\n                        ...state.todos,\n                        byId: {\n                            ...nextTodos\n                        },\n                        allIds: [\n                            ...nextTodosIds\n                        ]\n                    }\n\n                }\n                localStorage.setItem('state', JSON.stringify(newState))\n                return {\n                    ...newState\n                }\n            })()\n        case SEARCH:\n            return (() => {\n                const { string, queryType } = action;\n                const todosObject = { ...state.todos.byId };\n                const todosList = Object.values(todosObject);\n\n                let searchedTodos;\n                if (queryType === \"title\") {\n                    searchedTodos = [todosList.filter(item => {\n                        if (item.title.toLowerCase().indexOf(string.toLowerCase()) >= 0 || string.length <= 0) {\n                            return item;\n                        }\n                    })]\n                } else {\n                    searchedTodos = [todosList.filter(item => {\n                        if (item.number === Number(string)) {\n                            return item;\n                        }\n                    })]\n                }\n\n                return {\n                    ...state,\n                    searchedTodos: searchedTodos[0]\n                }\n            })();\n        case ADD_COMMENT:\n            return (() => {\n                const { string, id, todoId, commentId } = action;\n\n                const newComment = {\n                    text: string,\n                    id: id,\n                    comments: []\n                }\n                let newState;\n                // если комментарий на комментарий\n                if (commentId) {\n                    console.log(state.comments.byId, commentId)\n                    newState = {\n                        ...state,\n\n                        comments: {\n                            ...state.comments,\n                            byId: {\n                                ...state.comments.byId,\n                                [id]: newComment,\n                                [commentId]: {\n                                    ...state.comments.byId[commentId],\n                                    comments: [...state.comments.byId[commentId].comments, id]\n                                }\n                            },\n                            allIds: [\n                                ...state.comments.allIds, id\n                            ]\n                        }\n                    }\n                } else {\n\n                    newState = {\n                        ...state,\n\n                        todos: {\n                            ...state.todos,\n                            byId: {\n                                ...state.todos.byId,\n                                [todoId]: {\n                                    ...state.todos.byId[todoId],\n                                    comments: [...state.todos.byId[todoId].comments, id]\n                                }\n                            },\n                        },\n                        comments: {\n                            ...state.comments,\n                            byId: {\n                                ...state.comments.byId,\n                                [id]: newComment\n                            },\n                            allIds: [\n                                ...state.comments.allIds, id\n                            ],\n                            postIds: [\n                                ...state.comments.allIds, id\n                            ]\n                        }\n                    }\n                }\n                localStorage.setItem('state', JSON.stringify(newState))\n                return {\n                    ...newState\n                }\n            })()\n        default:\n            return state;\n    }\n\n}","import { combineReducers } from \"redux\";\nimport { todosReducer } from \"../features/todosSlice\";\n\nexport const rootReducer = combineReducers({\n    todos: todosReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { rootReducer } from './redux/rootReducer';\nimport { createStore, compose, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport './reset.scss';\n\nconst store = createStore(rootReducer, composeWithDevTools(\n  applyMiddleware(\n    // saga\n  ),\n))\n\nReactDOM.render(\n  // харнилище - стор\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}