{"version":3,"sources":["components/ProjectItem.jsx","pages/ProjectsPage.jsx","redux/types.js","redux/actions.js","components/AddComment.jsx","components/AddSubtask.jsx","components/AddTodo.jsx","components/Modal.jsx","components/Comment.jsx","components/Comments.jsx","components/SubTodo.jsx","components/SubTodos.jsx","components/TodoItem.jsx","components/Search.jsx","components/TodoColumn.jsx","pages/TodosPage.jsx","components/Nav.jsx","App.js","features/todosSlice.js","redux/rootReducer.js","index.js"],"names":["ProjectItem","projectName","description","id","columns","navigate","useNavigate","className","onClick","evt","state","ProjectsPage","projects","useSelector","todos","projectsIds","allIds","map","item","project","byId","console","log","ADD_TODO","EDIT_TODO","CHANGE_TODO_COLUMN","REMOVE_TODO","SEARCH","ADD_COMMENT","ADD_SUBTASK","CHECK_SUBTASK","changeTodoColumn","columnId","nextColumnId","type","payload","AddComment","showModal","todoId","commentId","dispatch","useDispatch","useState","comment","setComment","setId","useEffect","nanoid","onSubmit","preventDefault","target","reset","string","addComment","onChange","value","AddSubtask","subtask","setSubtask","addSubtask","AddTodo","oldTodo","columnsIds","lastIndex","title","setTitle","setDescription","date","setDate","timeTaken","setTimeTaken","finalDate","setFinalDate","priority","setPriority","status","setStatus","todo","number","comments","subTasks","editTodo","addTodo","nextStatus","Modal","children","onCloseModal","e","stopPropagation","Comment","showCommentModal","setShowCommentModal","text","Comments","commentsIds","showReplies","setShowReplies","postCommentsIds","length","i","SubTodo","subTodo","checked","setChecked","newChecked","checkSubtask","SubTodos","subTodos","subTodosIds","TodoItem","showEditModal","setShowEditModal","showSubtaskModal","setShowSubtaskModal","useDrag","collect","monitor","isDragging","dragRef","ref","attachedFiles","removeTodo","Search","query","setQuery","queryType","setQueryType","inputType","setInputType","validationMessage","setValidationMessage","showResult","setShowResult","foundTodos","searchedTodos","search","TodoColumn","todosIds","showAddTodo","setShowAddTodo","useDrop","accept","drop","isOver","TodosPage","location","useLocation","projectId","useParams","projectInfo","columnsArr","columnName","Nav","to","App","basename","path","exact","element","localStoredState","JSON","parse","localStorage","getItem","initialState","postIds","rootReducer","combineReducers","action","columnsById","newState","Number","setItem","stringify","oldColumnsIds","newColumnsIds","oldColumnIdIndex","findIndex","nextOldColumnTodos","slice","nextTodos","todoIdIndex","columnIdIndex","nextColumnTodos","nextTodosIds","todosObject","todosList","Object","values","filter","toLowerCase","indexOf","newComment","newSubTask","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","DndProvider","backend","HTML5Backend","document","getElementById"],"mappings":"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","file":"static/js/main.d85d581f.chunk.js","sourcesContent":["import React from 'react'\nimport { useNavigate } from 'react-router-dom';\n\nexport default function ProjectItem({ projectName, description, id, columns }) {\n    const navigate = useNavigate();\n    const clickHandler = (evt) => {\n        navigate(`/todos/${id}`, {\n            state: {\n                id: id,\n                projectName: projectName,\n                description: description,\n                columns: columns\n            }\n        })\n    }\n    return (\n        <div className=\"todo__item\" onClick={clickHandler}>\n            <h2 className=\"todo__title\">{projectName}</h2>\n            <p className=\"todo__text\">{description}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport ProjectItem from '../components/ProjectItem'\n\nexport default function ProjectsPage() {\n    let projects = useSelector(state => state.todos.projects);\n    let projectsIds = useSelector(state => state.todos.projects.allIds);\n    return (\n        <div>\n            <h2 className=\"todo__title\">Projects</h2>\n            <div className='todo__projects'>\n                {projectsIds.map(item => {\n                    const project = projects.byId[item];\n                    console.log(project)\n                    return <ProjectItem description={project.description} id={project.id} columns={project.columns} projectName={project.projectName} />\n                })}\n            </div>\n\n        </div>\n    )\n}\n","\nexport const ADD_TODO = 'TODOS/ADD_TODO'\nexport const EDIT_TODO = 'TODOS/EDIT_TODO'\nexport const CHANGE_TODO_COLUMN = 'TODOS/CHANGE_TODO_COLUMN'\nexport const REMOVE_TODO = 'TODOS/REMOVE_TODO'\nexport const SEARCH = 'TODOS/SEARCH'\nexport const ADD_COMMENT = 'TODOS/ADD_COMMENT'\nexport const ADD_SUBTASK = 'TODOS/ADD_SUBTASK'\nexport const CHECK_SUBTASK = 'TODOS/CHECK_SUBTASK'\n","import {\n    ADD_TODO,\n    REMOVE_TODO,\n    EDIT_TODO,\n    CHANGE_TODO_COLUMN,\n    SEARCH,\n    ADD_COMMENT,\n    ADD_SUBTASK,\n    CHECK_SUBTASK\n} from './types';\n\n\nexport function addTodo(id, todo, columnId) {\n    return {\n        type: ADD_TODO,\n        payload: {\n            id,\n            todo,\n            columnId\n        }\n    }\n}\n\nexport function editTodo(id, todo, columnId) {\n    return {\n        type: EDIT_TODO,\n        payload: {\n            id,\n            todo,\n            columnId\n        }\n    }\n}\n\nexport function changeTodoColumn(id, columnId, nextColumnId) {\n    return {\n        type: CHANGE_TODO_COLUMN,\n        payload: {\n            id,\n            columnId,\n            nextColumnId\n        }\n    }\n}\nexport function removeTodo(id, columnId) {\n    return {\n        type: REMOVE_TODO,\n        payload: {\n            id,\n            columnId\n        }\n    }\n}\n\nexport function search(string, queryType) {\n    return {\n        type: SEARCH,\n        string,\n        queryType\n    }\n}\n\nexport function addComment(string, id, todoId, commentId) {\n    return {\n        type: ADD_COMMENT,\n        string,\n        id,\n        todoId,\n        commentId\n    }\n}\nexport function addSubtask(subtask, id, todoId) {\n    return {\n        type: ADD_SUBTASK,\n        subtask,\n        id,\n        todoId,\n    }\n}\nexport function checkSubtask(id, checked) {\n    return {\n        type: CHECK_SUBTASK,\n        id,\n        checked\n    }\n}","import { nanoid } from 'nanoid';\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch } from \"react-redux\";\nimport { addComment } from '../redux/actions';\n\nexport default function AddComment({ showModal, todoId, commentId }) {\n    const dispatch = useDispatch();\n    const [comment, setComment] = useState('');\n\n    const [id, setId] = useState(\"\");\n    useEffect(() => {\n        setId(nanoid())\n    }, [])\n\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        evt.target.reset();\n        // reset form\n        showModal(false)\n        dispatch(addComment(comment, id, todoId, commentId))\n\n    }\n    return (\n        <form className=\"todo__form\" onSubmit={handleSubmit}>\n            <label className=\"todo__label\">\n                <span className=\"todo__label-text\">Comment</span>\n                <input className=\"todo__input\" type=\"text\" onChange={(evt) => { setComment(evt.target.value) }} value={comment} />\n            </label>\n\n            <input className=\"button\" type=\"submit\" />\n        </form>\n    )\n}\n","import { nanoid } from 'nanoid';\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch } from \"react-redux\";\nimport { addSubtask } from '../redux/actions';\n\nexport default function AddSubtask({ showModal, todoId, commentId }) {\n    const dispatch = useDispatch();\n    const [subtask, setSubtask] = useState('');\n\n    const [id, setId] = useState(\"\");\n    useEffect(() => {\n        setId(nanoid())\n    }, [])\n\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        evt.target.reset();\n        // reset form\n        showModal(false)\n        dispatch(addSubtask(subtask, id, todoId))\n        // dispatch(addSubtask(comment, id, todoId, commentId))\n\n    }\n    return (\n        <form className=\"todo__form\" onSubmit={handleSubmit}>\n            <label className=\"todo__label\">\n                <span className=\"todo__label-text\">Subtask</span>\n                <input className=\"todo__input\" type=\"text\" onChange={(evt) => { setSubtask(evt.target.value) }} value={subtask} />\n            </label>\n\n            <input className=\"button\" type=\"submit\" />\n        </form>\n    )\n}\n","import { nanoid } from 'nanoid';\nimport React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodo, changeTodoColumn, editTodo } from '../redux/actions';\n\nexport default function AddTodo({ columnId, showModal, oldTodo, columnsIds }) {\n    let lastIndex = useSelector(state => state.todos.todos.lastIndex);\n    const dispatch = useDispatch();\n\n    const [id, setId] = useState(\"\");\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [date, setDate] = useState(\"\");\n    const [timeTaken, setTimeTaken] = useState(\"\");\n    const [finalDate, setFinalDate] = useState(\"\");\n    const [priority, setPriority] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n\n    useEffect(() => {\n        if (oldTodo) {\n            setTitle(oldTodo.title);\n            setDescription(oldTodo.description);\n            setDate(oldTodo.date);\n            setTimeTaken(oldTodo.timeTaken);\n            setFinalDate(oldTodo.finalDate);\n            setPriority(oldTodo.priority);\n            setStatus(oldTodo.status);\n            setId(oldTodo.id)\n        } else {\n            setId(nanoid());\n            setStatus(columnId)\n        }\n\n    }, [])\n\n    const todo = {\n        id: id,\n        title: title,\n        number: lastIndex,\n        description: description,\n        date: date,\n        timeTaken: timeTaken,\n        finalDate: finalDate,\n        priority: priority,\n        comments: [],\n        // attachedFiles: [1, 2, 3],\n        status: status,\n        subTasks: [],\n    }\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        evt.target.reset();\n        // reset form\n        showModal(false)\n        if (oldTodo) {\n            dispatch(editTodo(id, todo, status))\n        } else {\n            dispatch(addTodo(id, todo, status))\n        }\n    }\n    const changeTodoColumnHandler = (evt) => {\n        const nextStatus = evt.target.value;\n        setStatus(nextStatus)\n        if (oldTodo) {\n            dispatch(changeTodoColumn(id, status, nextStatus))\n        }\n    }\n    return (\n\n\n        <form className=\"todo__form\" onSubmit={handleSubmit}>\n            <label className=\"todo__label\">\n                <span className=\"todo__label-text\">Title</span>\n                <input className=\"todo__input\" type=\"text\" onChange={(evt) => { setTitle(evt.target.value) }} value={title} />\n            </label>\n            <label className=\"todo__label\">\n                <span className=\"todo__label-text\">Description</span>\n                <input className=\"todo__input\" type=\"text\" onChange={(evt) => { setDescription(evt.target.value) }} value={description} />\n            </label>\n            <label className=\"todo__label\">\n                <span className=\"todo__label-text\">Date</span>\n                <input className=\"todo__input\" type=\"date\" onChange={(evt) => { setDate(evt.target.value) }} value={date} />\n            </label>\n            <label className=\"todo__label\">\n                <span className=\"todo__label-text\">Time taken</span>\n                <input className=\"todo__input\" type=\"text\" onChange={(evt) => { setTimeTaken(evt.target.value) }} value={timeTaken} />\n            </label>\n            <label className=\"todo__label\">\n                <span className=\"todo__label-text\">Final date</span>\n                <input className=\"todo__input\" type=\"date\" onChange={(evt) => { setFinalDate(evt.target.value) }} value={finalDate} />\n            </label>\n\n            <select onChange={(evt) => { setPriority(evt.target.value) }}>\n                <option value=\"\">--Choose priority--</option>\n                <option value=\"high\">High</option>\n                <option value=\"average\">Average</option>\n                <option value=\"low\">Low</option>\n            </select>\n            <select onChange={changeTodoColumnHandler}\n                value={status}>\n                <option value=\"\">--Choose status--</option>\n                <option value={columnsIds[0]}>Queue</option>\n                <option value={columnsIds[1]}>Development</option>\n                <option value={columnsIds[2]}>Done</option>\n            </select>\n            {/* <label>\n                    <input type=\"file\" onChange={(evt) => { console.log(evt.target.value) }} />\n                </label> */}\n            <input className=\"button\" type=\"submit\" />\n        </form>\n\n\n    )\n}\n","\nimport '../scss/Modal.scss';\n\nexport default function Modal({ type, children, title, showModal }) {\n\n\n    function onCloseModal() {\n        showModal(false)\n    }\n\n    return (\n        <section className=\"modal\">\n            <div className=\"modal__overlay\" onClick={onCloseModal}>\n                <div className=\"modal__container\" onClick={e => e.stopPropagation()}>\n                    <button className=\"modal__button-close\" type=\"button\" aria-label=\"Закрыть окно\" onClick={onCloseModal}></button>\n                    <h2 className=\"todo__title\">{title}</h2>\n                    {children}\n                </div>\n            </div>\n        </section>\n    )\n}\n","import React, { useState } from 'react'\nimport AddComment from './AddComment';\nimport Comments from './Comments';\nimport Modal from './Modal';\n\nexport default function Comment({ todoId, comment }) {\n    // const { text, id } = comment;\n    const [showCommentModal, setShowCommentModal] = useState(false)\n    const clickHandler = () => {\n        setShowCommentModal(true)\n    }\n    return (\n        <div className='todo__comment'>\n            <div>{comment.text}</div>\n            <button className=\"button\" onClick={clickHandler}>reply</button>\n            <Comments todoId={todoId} comment={comment} />\n            {showCommentModal ?\n                <Modal title=\"Reply a comment\">\n                    <AddComment showModal={setShowCommentModal} todoId={todoId} commentId={comment.id} />\n                </Modal> : \"\"\n            }\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport Comment from './Comment';\n\n\nexport default function Comments({ todoId, comment }) {\n    const [showReplies, setShowReplies] = useState(true)\n    let comments = useSelector(state => state.todos.comments.byId);\n    let commentsIds;\n    let postCommentsIds = useSelector(state => state.todos.todos.byId[todoId].comments);\n    if (comment) {\n        commentsIds = comment.comments;\n    } else {\n        commentsIds = postCommentsIds;\n    }\n    useEffect(() => {\n        if (comment) {\n            setShowReplies(!showReplies)\n        }\n    }, [])\n\n    const showRepliesHandler = () => {\n        setShowReplies(!showReplies)\n    }\n\n    return (\n        <>\n            {/* вот тут разобраться с отображением */}\n            {/* show/hide */}\n            {/* число комментариев */}\n            {comment && comment.comments ? <button className=\"button\" onClick={showRepliesHandler}>show replies</button> : ''}\n            {postCommentsIds.length || commentsIds.length ?\n\n                <div>\n                    {!comment ? <h4 className='todo__title'>Comments</h4> : ''}\n                    {showReplies ?\n                        <div className='todo__comments'>\n                            {commentsIds.map(i => {\n                                const item = comments[i];\n                                return <Comment comment={item} todoId={todoId} />\n                            })}\n                        </div>\n                        : ''\n                    }\n                </div> : ''\n\n            }\n\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { checkSubtask } from '../redux/actions';\n\nexport default function SubTodo({ subTodo, todoId }) {\n    const [checked, setChecked] = useState(false);\n    console.log(subTodo.checked)\n    useEffect(() => {\n        setChecked(subTodo.checked)\n    }, [])\n    console.log(checked)\n    const dispatch = useDispatch();\n    const checkSubtaskHandler = (evt) => {\n        const newChecked = !checked;\n        setChecked(newChecked);\n        dispatch(checkSubtask(subTodo.id, newChecked))\n    }\n    return (\n        <div className='todo__subtodo'>\n            <label className='checkbox'>\n                <input className='checkbox__input' type=\"checkbox\" onChange={checkSubtaskHandler} checked={checked} />\n                <span className='checkbox__indicator'></span>\n            </label>\n            <div>{subTodo.text}</div>\n        </div>\n\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport SubTodo from './SubTodo';\n\n\nexport default function SubTodos({ todoId }) {\n    let subTodos = useSelector(state => state.todos.subTasks.byId);\n    let subTodosIds = useSelector(state => state.todos.todos.byId[todoId].subTasks);\n\n    return (\n        <>\n            {subTodosIds.length ? <>\n                <h4 className='todo__title'>Subtodos</h4>\n\n                <div>\n                    {\n                        subTodosIds.map(i => {\n                            const item = subTodos[i];\n                            return <SubTodo subTodo={item} todoId={todoId} />\n                        })\n\n                    }\n                </div>\n            </> : ''}\n        </>\n    )\n}\n","import React, { useState } from 'react'\nimport { useDispatch } from \"react-redux\";\nimport { removeTodo } from '../redux/actions';\nimport AddComment from './AddComment';\nimport AddSubtask from './AddSubtask';\nimport AddTodo from './AddTodo';\nimport Comments from './Comments';\nimport SubTodos from './SubTodos'\nimport Modal from './Modal';\nimport { useDrag } from 'react-dnd'\n\n\nexport default function TodoItem({ todo, columnId, columnsIds }) {\n    const [showEditModal, setShowEditModal] = useState(false)\n    const [showCommentModal, setShowCommentModal] = useState(false)\n    const [showSubtaskModal, setShowSubtaskModal] = useState(false)\n\n    const dispatch = useDispatch();\n\n    const handleAddComment = () => {\n        setShowCommentModal(true)\n    }\n    const handleAddSubtask = () => {\n        setShowSubtaskModal(true)\n    }\n    const handleDelete = () => {\n        dispatch(removeTodo(todo.id, columnId))\n    }\n    const handleEdit = () => {\n        setShowEditModal(true)\n    }\n\n    const [{ isDragging }, dragRef] = useDrag(() => ({\n        type: 'CARD',\n        item: {\n            id: todo.id,\n            columnId: columnId\n        },\n        collect: (monitor) => ({\n            isDragging: !!monitor.isDragging()\n        })\n    }))\n\n\n\n    return (\n        <>\n            <div className={isDragging ? 'todo__item todo__item--dragged' : 'todo__item'} ref={dragRef}>\n                <div>{todo.number}</div>\n                <h3 className='todo__subtitle'>{todo.title}</h3>\n                <p className='todo__text'>{todo.description}</p>\n                <p className='todo__text'> {todo.date}</p>\n                <p className='todo__text'> {todo.timeTaken}</p>\n                <p className='todo__text'> {todo.finalDate}</p>\n                <p className='todo__text'> {todo.priority}</p>\n                <p className='todo__text'> {todo.attachedFiles}</p>\n\n                <div className='buttons'>\n                    <button className=\"button\" onClick={handleAddComment}>add comment</button>\n                    <button className=\"button\" onClick={handleAddSubtask}>add subtask</button>\n                </div>\n\n                <div className='buttons'>\n                    <button className=\"button\" onClick={handleDelete}>delete</button>\n                    <button className=\"button\" onClick={handleEdit}>edit</button>\n                </div>\n                <Comments todoId={todo.id} />\n                <SubTodos todoId={todo.id} />\n            </div>\n\n            {showEditModal ?\n                <Modal title=\"Edit todo\" showModal={setShowEditModal}>\n                    <AddTodo columnId={columnId} showModal={setShowEditModal} oldTodo={todo} columnsIds={columnsIds} />\n                </Modal> : \"\"\n            }\n            {showCommentModal ?\n                <Modal title=\"Add a comment\" showModal={setShowCommentModal}>\n                    <AddComment showModal={setShowCommentModal} todoId={todo.id} />\n                </Modal> : \"\"\n            }\n            {showSubtaskModal ?\n                <Modal title=\"Add a subtask\" showModal={setShowSubtaskModal}>\n                    <AddSubtask showModal={setShowSubtaskModal} todoId={todo.id} />\n                </Modal> : \"\"\n            }\n        </>\n    )\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { search } from '../redux/actions';\nimport TodoItem from './TodoItem';\n\nexport default function Search() {\n    const [query, setQuery] = useState('');\n    const [queryType, setQueryType] = useState('title');\n    const [inputType, setInputType] = useState('text')\n    const [validationMessage, setValidationMessage] = useState('');\n    const [showResult, setShowResult] = useState(false)\n\n    const dispatch = useDispatch();\n    let foundTodos = useSelector(state => state.todos.searchedTodos);\n\n    const searchHandler = (evt) => {\n        evt.preventDefault();\n        setShowResult(true)\n        if (query) {\n            dispatch(search(query, queryType));\n        } else {\n            setValidationMessage('Your search query is empty')\n        }\n    }\n    const selectChangeHandler = (evt) => {\n        setQueryType(evt.target.value);\n        if (evt.target.value === \"number\") {\n            setInputType(\"number\")\n        } else {\n            setInputType(\"text\")\n        }\n    }\n\n    return (\n        <>\n            <h3 className='todo__title'>Search</h3>\n            <form className=\"todo__search\" onSubmit={searchHandler}>\n                <label className=\"todo__label\">\n                    <input className=\"todo__input\" type={inputType} onChange={(evt) => {\n                        setQuery(evt.target.value)\n                    }} value={query} />\n                </label>\n\n                <select onChange={selectChangeHandler}>\n                    <option value=\"title\">Search by title</option>\n                    <option value=\"number\">Search by number</option>\n                </select>\n                <div>{validationMessage}</div>\n                <input className=\"button\" type=\"submit\" value=\"search\" />\n            </form>\n\n            {showResult ?\n                <>\n                    <h3 className='todo__title'>Found todos</h3>\n                    <div className='todo__found'>\n                        {foundTodos.map(item => <TodoItem todo={item} />)}\n                    </div>\n                </>\n                : ''}\n        </>\n\n    )\n}\n","import React from 'react'\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TodoItem from './TodoItem';\nimport Modal from './Modal'\nimport AddTodo from './AddTodo'\nimport { useDrop } from 'react-dnd'\nimport { changeTodoColumn } from '../redux/actions';\n\nexport default function TodoColumn({ title, id, todosIds, columnsIds }) {\n    let todos = useSelector(state => state.todos.todos);\n    const dispatch = useDispatch();\n    const [showAddTodo, setShowAddTodo] = useState(false)\n    const addTodoClick = () => {\n        setShowAddTodo(!showAddTodo)\n    }\n\n    const [{ isOver }, drop] = useDrop(() => ({\n        accept: 'CARD',\n        drop: (item) => {\n            item.columnId !== id && dispatch(changeTodoColumn(item.id, item.columnId, id))\n        },\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n        })\n\n    }))\n    return (\n\n        <div className='todo__column' ref={drop}>\n            <h2 className='todo__title'>{title}</h2>\n            <button className=\"todo__button button\" onClick={addTodoClick}>Add todo</button>\n            <div className='todo__list'>\n                {todosIds.map(i => {\n                    const item = todos.byId[i];\n                    return <TodoItem todo={item} columnId={id} showModal={setShowAddTodo} columnsIds={columnsIds} />\n                })}\n\n            </div>\n            {showAddTodo ?\n                <Modal title=\"Add todo\" showModal={setShowAddTodo}>\n                    <AddTodo columnId={id} showModal={setShowAddTodo} columnsIds={columnsIds} />\n                </Modal> : \"\"}\n        </div>\n\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { useLocation, useParams } from 'react-router-dom'\nimport Search from '../components/Search';\nimport TodoColumn from '../components/TodoColumn';\n\n\nexport default function TodosPage() {\n    const location = useLocation();\n    const params = useParams();\n    const projectId = params.id;\n\n    let projectInfo = useSelector(state => state.todos.projects.byId)[projectId];\n    let projectName, description, id, columns;\n\n    if (projectInfo) {\n        projectName = projectInfo.projectName;\n        description = projectInfo.description;\n        id = projectInfo.id;\n        columns = projectInfo.columns;\n    } else {\n        projectName = location.state.projectName;\n        description = location.state.description;\n        id = location.state.id;\n        columns = location.state.columns;\n    }\n\n    let columnsArr = useSelector(state => state.todos.columns);\n\n    return (\n        <>\n            <h2 className=\"todo__title\">{projectName}</h2>\n            <p className=\"todo__text\">{description}</p>\n            <Search />\n            <div className='todo__columns'>\n\n                {columns.map(i => {\n                    const item = columnsArr.byId[i];\n                    return <TodoColumn\n                        id={item.id}\n                        projectId={id}\n                        title={item.columnName}\n                        todosIds={item.todos}\n                        columnsIds={columns}\n                    />\n                })}\n\n            </div>\n        </>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Nav() {\n    return (\n        <div>\n            <Link className='todo__main-title' to=\"/\"><h1>Todo app</h1></Link>\n        </div>\n    )\n}\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport ProjectsPage from \"./pages/ProjectsPage\";\nimport TodosPage from \"./pages/TodosPage\";\nimport './App.scss';\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n\n\n  return (\n    <Router basename='/'>\n      <Nav />\n      <Routes>\n        <Route path=\"/\" exact element={<ProjectsPage />} />\n        <Route path=\"/todos/:id\" element={<TodosPage />} />\n      </Routes>\n    </Router>\n\n  );\n}\n\nexport default App;\n","\n\nimport {\n    ADD_TODO,\n    REMOVE_TODO,\n    EDIT_TODO,\n    CHANGE_TODO_COLUMN,\n    SEARCH,\n    ADD_COMMENT,\n    ADD_SUBTASK,\n    CHECK_SUBTASK\n} from \"../redux/types\";\n\nconst localStoredState = JSON.parse(localStorage.getItem('state'));\nconst initialLocalState = {\n    projects: {\n        byId: {\n            \"4f90d13a40\": {\n                projectName: \"Book App\",\n                description: \"App for discovering new books and sharing opinin about the books you read\",\n                id: \"4f90d13a40\",\n                columns: [\"4f90d13a41\", \"4f90d13a42\", \"4f90d13a43\"]\n            },\n            \"4f90d13a44\": {\n                projectName: \"Pet Food App\",\n                description: \"App for ordering pet food and sharing opinion about it\",\n                id: \"4f90d13a41\",\n                columns: [\"4f90d13a45\", \"4f90d13a46\", \"4f90d13a47\"]\n            }\n        },\n        allIds: [\"4f90d13a40\", \"4f90d13a44\"]\n    },\n    columns: {\n        byId: {\n            \"4f90d13a41\": {\n                id: \"4f90d13a41\",\n                columnName: \"Queue\",\n                todos: [],\n            },\n            \"4f90d13a42\": {\n                id: \"4f90d13a42\",\n                columnName: \"Development\",\n                todos: [],\n            },\n            \"4f90d13a43\": {\n                id: \"4f90d13a43\",\n                columnName: \"Done\",\n                todos: [],\n            },\n            \"4f90d13a45\": {\n                id: \"4f90d13a45\",\n                columnName: \"Queue\",\n                todos: [],\n            },\n            \"4f90d13a46\": {\n                id: \"4f90d13a46\",\n                columnName: \"Development\",\n                todos: [],\n            },\n            \"4f90d13a47\": {\n                id: \"4f90d13a47\",\n                columnName: \"Done\",\n                todos: [],\n            },\n        },\n        allIds: [\"4f90d13a41\", \"4f90d13a42\", \"4f90d13a43\", \"4f90d13a45\", \"4f90d13a46\", \"4f90d13a47\"]\n    },\n    todos: {\n        byId: {},\n        allIds: [],\n        lastIndex: 1\n    },\n    subTasks: {\n        byId: {},\n        allIds: []\n    },\n    comments: {\n        byId: {},\n        postIds: [],\n        allIds: []\n    },\n    searchedTodos: [],\n}\n\nconst initialState = localStoredState ? { ...localStoredState } : { ...initialLocalState };\n\nexport const todosReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_TODO:\n            const { todo, columnId, id } = action.payload;\n            const columnsById = state.columns.byId;\n\n            const newState = {\n                ...state,\n                columns: {\n                    byId: {\n                        ...columnsById,\n                        [columnId]: {\n                            ...columnsById[columnId],\n                            todos: [...columnsById[columnId].todos, id]\n                        }\n                    }\n                },\n                todos: {\n                    ...state.todos,\n                    byId: {\n                        ...state.todos.byId,\n                        [id]: todo\n                    },\n                    allIds: [\n                        ...state.todos.allIds,\n                        id\n                    ],\n                    lastIndex: Number(state.todos.lastIndex) + 1\n                }\n            }\n            localStorage.setItem('state', JSON.stringify(newState))\n            return {\n                ...newState\n            }\n        case EDIT_TODO:\n            return (() => {\n                const { todo, id } = action.payload;\n                const newState = {\n                    ...state,\n                    todos: {\n                        ...state.todos,\n                        byId: {\n                            ...state.todos.byId,\n                            [id]: todo\n                        }\n                    }\n                }\n                localStorage.setItem('state', JSON.stringify(newState))\n                return {\n                    ...newState\n                }\n            })()\n        case CHANGE_TODO_COLUMN:\n            return (() => {\n                const { id, columnId, nextColumnId } = action.payload;\n                const columnsById = state.columns.byId;\n                const oldColumnsIds = state.columns.byId[columnId].todos;\n                const newColumnsIds = state.columns.byId[nextColumnId].todos;\n\n                const oldColumnIdIndex = oldColumnsIds.findIndex(item => item === id);\n\n                const nextOldColumnTodos = [\n                    ...oldColumnsIds.slice(0, oldColumnIdIndex),\n                    ...oldColumnsIds.slice(oldColumnIdIndex + 1)\n                ];\n\n                const newState = {\n                    ...state,\n                    columns: {\n                        byId: {\n                            ...columnsById,\n                            [columnId]: {\n                                ...columnsById[columnId],\n                                todos: nextOldColumnTodos\n                            },\n                            [nextColumnId]: {\n                                ...columnsById[nextColumnId],\n                                todos: [...newColumnsIds, id]\n                            }\n                        }\n                    },\n                    todos: {\n                        ...state.todos,\n                        byId: {\n                            ...state.todos.byId,\n                            [id]: {\n                                ...state.todos.byId[id],\n                                status: nextColumnId\n                            }\n                        },\n                    }\n\n                }\n                localStorage.setItem('state', JSON.stringify(newState))\n                return {\n                    ...newState\n                }\n            })()\n        case REMOVE_TODO:\n            return (() => {\n                const { columnId, id } = action.payload;\n                const columnsById = state.columns.byId;\n                const columnsIds = state.columns.byId[columnId].todos;\n                const todosIds = state.todos.allIds;\n                const todos = state.todos;\n\n                // измнененный объект с todo\n                const { [id]: _, ...nextTodos } = todos.byId;\n\n                const todoIdIndex = todosIds.findIndex(item => item === id);\n                const columnIdIndex = columnsIds.findIndex(item => item === id);\n\n                const nextColumnTodos = [\n                    ...columnsIds.slice(0, columnIdIndex),\n                    ...columnsIds.slice(columnIdIndex + 1)\n                ];\n                const nextTodosIds = [\n                    ...todosIds.slice(0, todoIdIndex),\n                    ...todosIds.slice(todoIdIndex + 1)\n                ];\n                const newState = {\n                    ...state,\n                    columns: {\n                        byId: {\n                            ...columnsById,\n                            [columnId]: {\n                                ...columnsById[columnId],\n                                todos: nextColumnTodos\n                            }\n                        }\n                    },\n\n                    todos: {\n                        ...state.todos,\n                        byId: {\n                            ...nextTodos\n                        },\n                        allIds: [\n                            ...nextTodosIds\n                        ]\n                    }\n\n                }\n                localStorage.setItem('state', JSON.stringify(newState))\n                return {\n                    ...newState\n                }\n            })()\n        case SEARCH:\n            return (() => {\n                const { string, queryType } = action;\n                const todosObject = { ...state.todos.byId };\n                const todosList = Object.values(todosObject);\n\n                let searchedTodos;\n                if (queryType === \"title\") {\n                    searchedTodos = [todosList.filter(item => {\n                        if (item.title.toLowerCase().indexOf(string.toLowerCase()) >= 0 || string.length <= 0) {\n                            return item;\n                        }\n                    })]\n                } else {\n                    searchedTodos = [todosList.filter(item => {\n                        if (item.number === Number(string)) {\n                            return item;\n                        }\n                    })]\n                }\n\n                return {\n                    ...state,\n                    searchedTodos: searchedTodos[0]\n                }\n            })();\n        case ADD_COMMENT:\n            return (() => {\n                const { string, id, todoId, commentId } = action;\n\n                const newComment = {\n                    text: string,\n                    id: id,\n                    comments: []\n                }\n                let newState;\n                // если комментарий на комментарий\n                if (commentId) {\n                    newState = {\n                        ...state,\n\n                        comments: {\n                            ...state.comments,\n                            byId: {\n                                ...state.comments.byId,\n                                [id]: newComment,\n                                [commentId]: {\n                                    ...state.comments.byId[commentId],\n                                    comments: [...state.comments.byId[commentId].comments, id]\n                                }\n                            },\n                            allIds: [\n                                ...state.comments.allIds, id\n                            ]\n                        }\n                    }\n                } else {\n\n                    newState = {\n                        ...state,\n\n                        todos: {\n                            ...state.todos,\n                            byId: {\n                                ...state.todos.byId,\n                                [todoId]: {\n                                    ...state.todos.byId[todoId],\n                                    comments: [...state.todos.byId[todoId].comments, id]\n                                }\n                            },\n                        },\n                        comments: {\n                            ...state.comments,\n                            byId: {\n                                ...state.comments.byId,\n                                [id]: newComment\n                            },\n                            allIds: [\n                                ...state.comments.allIds, id\n                            ],\n                            postIds: [\n                                ...state.comments.allIds, id\n                            ]\n                        }\n                    }\n                }\n                localStorage.setItem('state', JSON.stringify(newState))\n                return {\n                    ...newState\n                }\n            })()\n        case ADD_SUBTASK:\n            return (() => {\n                const { subtask, id, todoId } = action;\n\n                const newSubTask = {\n                    text: subtask,\n                    id: id,\n                    checked: false\n                }\n                let newState;\n\n                newState = {\n                    ...state,\n\n                    todos: {\n                        ...state.todos,\n                        byId: {\n                            ...state.todos.byId,\n                            [todoId]: {\n                                ...state.todos.byId[todoId],\n                                subTasks: [...state.todos.byId[todoId].subTasks, id]\n                            }\n                        },\n                    },\n                    subTasks: {\n                        ...state.subTasks,\n                        byId: {\n                            ...state.subTasks.byId,\n                            [id]: newSubTask\n                        },\n                        allIds: [\n                            ...state.subTasks.allIds, id\n                        ],\n                    }\n                }\n\n                localStorage.setItem('state', JSON.stringify(newState))\n                return {\n                    ...newState\n                }\n            })()\n        case CHECK_SUBTASK:\n            return (() => {\n                const { id, checked } = action;\n\n                let newState;\n\n                newState = {\n                    ...state,\n\n                    todos: {\n                        ...state.todos,\n                    },\n                    subTasks: {\n                        ...state.subTasks,\n                        byId: {\n                            ...state.subTasks.byId,\n                            [id]: {\n                                ...state.subTasks.byId[id],\n                                checked: checked\n                            }\n                        },\n                    }\n                }\n\n                localStorage.setItem('state', JSON.stringify(newState))\n                return {\n                    ...newState\n                }\n            })()\n        default:\n            return state;\n    }\n\n}","import { combineReducers } from \"redux\";\nimport { todosReducer } from \"../features/todosSlice\";\n\nexport const rootReducer = combineReducers({\n    todos: todosReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { rootReducer } from './redux/rootReducer';\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport './reset.scss';\n\nconst store = createStore(rootReducer, composeWithDevTools(\n  applyMiddleware(\n    // saga\n  ),\n))\n\nReactDOM.render(\n  // харнилище - стор\n  <Provider store={store}>\n    <DndProvider backend={HTML5Backend}>\n      <App />\n    </DndProvider>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}