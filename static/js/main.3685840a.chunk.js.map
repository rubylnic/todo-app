{"version":3,"sources":["components/ProjectItem.jsx","pages/ProjectsPage.jsx","redux/types.js","components/AddComment.jsx","redux/actions.js","components/AddSubtask.jsx","components/AddTodo.jsx","components/Modal.jsx","components/Comment.jsx","components/Comments.jsx","components/SubTodo.jsx","components/SubTodos.jsx","components/TodoItem.jsx","components/Search.jsx","components/TodoColumn.jsx","pages/TodosPage.jsx","components/Nav.jsx","App.js","features/todosSlice.js","redux/rootReducer.js","index.js"],"names":["ProjectItem","projectName","description","id","columns","navigate","useNavigate","className","onClick","evt","state","ProjectsPage","projects","useSelector","todos","projectsIds","allIds","map","item","project","byId","console","log","ADD_TODO","EDIT_TODO","CHANGE_TODO_COLUMN","REMOVE_TODO","SEARCH","ADD_COMMENT","ADD_SUBTASK","CHECK_SUBTASK","AddComment","showModal","todoId","commentId","dispatch","useDispatch","useState","comment","setComment","setId","useEffect","nanoid","onSubmit","preventDefault","target","reset","string","type","addComment","onChange","value","AddSubtask","subtask","setSubtask","addSubtask","AddTodo","columnId","oldTodo","columnsIds","lastIndex","title","setTitle","setDescription","date","setDate","timeTaken","setTimeTaken","finalDate","setFinalDate","priority","setPriority","status","setStatus","todo","number","comments","subTasks","payload","editTodo","addTodo","nextStatus","nextColumnId","changeTodoColumn","Modal","children","onCloseModal","e","stopPropagation","Comment","showCommentModal","setShowCommentModal","text","Comments","commentsIds","showReplies","setShowReplies","postCommentsIds","length","i","SubTodo","subTodo","checked","setChecked","newChecked","checkSubtask","SubTodos","subTodos","subTodosIds","TodoItem","showEditModal","setShowEditModal","showSubtaskModal","setShowSubtaskModal","attachedFiles","removeTodo","Search","query","setQuery","queryType","setQueryType","inputType","setInputType","validationMessage","setValidationMessage","showResult","setShowResult","foundTodos","searchedTodos","search","TodoColumn","todosIds","showAddTodo","setShowAddTodo","TodosPage","location","useLocation","projectId","useParams","projectInfo","columnsArr","columnName","Nav","to","App","basename","path","exact","element","localStoredState","JSON","parse","localStorage","getItem","initialState","postIds","rootReducer","combineReducers","action","columnsById","newState","Number","setItem","stringify","oldColumnsIds","newColumnsIds","oldColumnIdIndex","findIndex","nextOldColumnTodos","slice","nextTodos","todoIdIndex","columnIdIndex","nextColumnTodos","nextTodosIds","todosObject","todosList","Object","values","filter","toLowerCase","indexOf","newComment","newSubTask","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"gOAGe,SAASA,EAAY,GAA4C,IAA1CC,EAAW,EAAXA,YAAaC,EAAW,EAAXA,YAAaC,EAAE,EAAFA,GAAIC,EAAO,EAAPA,QAC1DC,EAAWC,cAWjB,OACI,sBAAKC,UAAU,aAAaC,QAXX,SAACC,GAClBJ,EAAS,UAAD,OAAWF,GAAM,CACrBO,MAAO,CACHP,GAAIA,EACJF,YAAaA,EACbC,YAAaA,EACbE,QAASA,IAGrB,EAEsD,UAC9C,oBAAIG,UAAU,cAAa,SAAEN,IAC7B,mBAAGM,UAAU,aAAY,SAAEL,MAGvC,CCjBe,SAASS,IACpB,IAAIC,EAAWC,aAAY,SAAAH,GAAK,OAAIA,EAAMI,MAAMF,QAAQ,IACpDG,EAAcF,aAAY,SAAAH,GAAK,OAAIA,EAAMI,MAAMF,SAASI,MAAM,IAClE,OACI,gCACI,oBAAIT,UAAU,cAAa,sBAC3B,qBAAKA,UAAU,iBAAgB,SAC1BQ,EAAYE,KAAI,SAAAC,GACb,IAAMC,EAAUP,EAASQ,KAAKF,GAE9B,OADAG,QAAQC,IAAIH,GACL,cAACnB,EAAW,CAACE,YAAaiB,EAAQjB,YAAaC,GAAIgB,EAAQhB,GAAIC,QAASe,EAAQf,QAASH,YAAakB,EAAQlB,aACzH,QAKhB,C,WCnBasB,EAAW,iBACXC,EAAY,kBACZC,EAAqB,2BACrBC,EAAc,oBACdC,EAAS,eACTC,EAAc,oBACdC,EAAc,oBACdC,EAAgB,sB,YCHd,SAASC,EAAW,GAAmC,IAAjCC,EAAS,EAATA,UAAWC,EAAM,EAANA,OAAQC,EAAS,EAATA,UAC9CC,EAAWC,cACjB,EAA8BC,mBAAS,IAAG,mBAAnCC,EAAO,KAAEC,EAAU,KAE1B,EAAoBF,mBAAS,IAAG,mBAAzBlC,EAAE,KAAEqC,EAAK,KAChBC,qBAAU,WACND,EAAME,cACV,GAAG,IAWH,OACI,uBAAMnC,UAAU,aAAaoC,SATZ,SAAClC,GAClBA,EAAImC,iBACJnC,EAAIoC,OAAOC,QAEXd,GAAU,GACVG,EC2CD,SAAoBY,EAAQ5C,EAAI8B,EAAQC,GAC3C,MAAO,CACHc,KAAMpB,EACNmB,SACA5C,KACA8B,SACAC,YAER,CDnDiBe,CAAWX,EAASnC,EAAI8B,EAAQC,GAE7C,EAEwD,UAChD,wBAAO3B,UAAU,cAAa,UAC1B,sBAAMA,UAAU,mBAAkB,qBAClC,uBAAOA,UAAU,cAAcyC,KAAK,OAAOE,SAAU,SAACzC,GAAU8B,EAAW9B,EAAIoC,OAAOM,MAAO,EAAGA,MAAOb,OAG3G,uBAAO/B,UAAU,SAASyC,KAAK,aAG3C,CE5Be,SAASI,EAAW,GAAmC,IAAjCpB,EAAS,EAATA,UAAWC,EAAM,EAANA,OACtCE,GADuD,EAATD,UACnCE,eACjB,EAA8BC,mBAAS,IAAG,mBAAnCgB,EAAO,KAAEC,EAAU,KAE1B,EAAoBjB,mBAAS,IAAG,mBAAzBlC,EAAE,KAAEqC,EAAK,KAChBC,qBAAU,WACND,EAAME,cACV,GAAG,IAYH,OACI,uBAAMnC,UAAU,aAAaoC,SAVZ,SAAClC,GAClBA,EAAImC,iBACJnC,EAAIoC,OAAOC,QAEXd,GAAU,GACVG,EDoDD,SAAoBkB,EAASlD,EAAI8B,GACpC,MAAO,CACHe,KAAMnB,EACNwB,UACAlD,KACA8B,SAER,CC3DiBsB,CAAWF,EAASlD,EAAI8B,GAGrC,EAEwD,UAChD,wBAAO1B,UAAU,cAAa,UAC1B,sBAAMA,UAAU,mBAAkB,qBAClC,uBAAOA,UAAU,cAAcyC,KAAK,OAAOE,SAAU,SAACzC,GAAU6C,EAAW7C,EAAIoC,OAAOM,MAAO,EAAGA,MAAOE,OAG3G,uBAAO9C,UAAU,SAASyC,KAAK,aAG3C,CC5Be,SAASQ,EAAQ,GAA+C,IAA7CC,EAAQ,EAARA,SAAUzB,EAAS,EAATA,UAAW0B,EAAO,EAAPA,QAASC,EAAU,EAAVA,WACxDC,EAAY/C,aAAY,SAAAH,GAAK,OAAIA,EAAMI,MAAMA,MAAM8C,SAAS,IAC1DzB,EAAWC,cAEjB,EAAoBC,mBAAS,IAAG,mBAAzBlC,EAAE,KAAEqC,EAAK,KAChB,EAA0BH,mBAAS,IAAG,mBAA/BwB,EAAK,KAAEC,EAAQ,KACtB,EAAsCzB,mBAAS,IAAG,mBAA3CnC,EAAW,KAAE6D,EAAc,KAClC,EAAwB1B,mBAAS,IAAG,mBAA7B2B,EAAI,KAAEC,EAAO,KACpB,EAAkC5B,mBAAS,IAAG,mBAAvC6B,EAAS,KAAEC,EAAY,KAC9B,EAAkC9B,mBAAS,IAAG,mBAAvC+B,EAAS,KAAEC,EAAY,KAC9B,EAAgChC,mBAAS,IAAG,mBAArCiC,EAAQ,KAAEC,EAAW,KAC5B,EAA4BlC,mBAAS,IAAG,mBAAjCmC,EAAM,KAAEC,EAAS,KAExBhC,qBAAU,WACFiB,GACAI,EAASJ,EAAQG,OACjBE,EAAeL,EAAQxD,aACvB+D,EAAQP,EAAQM,MAChBG,EAAaT,EAAQQ,WACrBG,EAAaX,EAAQU,WACrBG,EAAYb,EAAQY,UACpBG,EAAUf,EAAQc,QAClBhC,EAAMkB,EAAQvD,MAEdqC,EAAME,eACN+B,EAAUhB,GAGlB,GAAG,IAEH,IAAMiB,EAAO,CACTvE,GAAIA,EACJ0D,MAAOA,EACPc,OAAQf,EACR1D,YAAaA,EACb8D,KAAMA,EACNE,UAAWA,EACXE,UAAWA,EACXE,SAAUA,EACVM,SAAU,GAEVJ,OAAQA,EACRK,SAAU,IAqBd,OAEI,8BACI,uBAAMtE,UAAU,aAAaoC,SArBhB,SAAClC,GAClBA,EAAImC,iBACJnC,EAAIoC,OAAOC,QAEXd,GAAU,GAENG,EADAuB,EFjCL,SAAkBvD,EAAIuE,EAAMjB,GAC/B,MAAO,CACHT,KAAMxB,EACNsD,QAAS,CACL3E,KACAuE,OACAjB,YAGZ,CEyBqBsB,CAAS5E,EAAIuE,EAAMF,GF7CjC,SAAiBrE,EAAIuE,EAAMjB,GAC9B,MAAO,CACHT,KAAMzB,EACNuD,QAAS,CACL3E,KACAuE,OACAjB,YAGZ,CEsCqBuB,CAAQ7E,EAAIuE,EAAMF,GAEnC,EAW4D,UAChD,wBAAOjE,UAAU,cAAa,UAC1B,sBAAMA,UAAU,mBAAkB,mBAClC,uBAAOA,UAAU,cAAcyC,KAAK,OAAOE,SAAU,SAACzC,GAAUqD,EAASrD,EAAIoC,OAAOM,MAAO,EAAGA,MAAOU,OAEzG,wBAAOtD,UAAU,cAAa,UAC1B,sBAAMA,UAAU,mBAAkB,yBAClC,uBAAOA,UAAU,cAAcyC,KAAK,OAAOE,SAAU,SAACzC,GAAUsD,EAAetD,EAAIoC,OAAOM,MAAO,EAAGA,MAAOjD,OAE/G,wBAAOK,UAAU,cAAa,UAC1B,sBAAMA,UAAU,mBAAkB,kBAClC,uBAAOA,UAAU,cAAcyC,KAAK,OAAOE,SAAU,SAACzC,GAAUwD,EAAQxD,EAAIoC,OAAOM,MAAO,EAAGA,MAAOa,OAExG,wBAAOzD,UAAU,cAAa,UAC1B,sBAAMA,UAAU,mBAAkB,wBAClC,uBAAOA,UAAU,cAAcyC,KAAK,OAAOE,SAAU,SAACzC,GAAU0D,EAAa1D,EAAIoC,OAAOM,MAAO,EAAGA,MAAOe,OAE7G,wBAAO3D,UAAU,cAAa,UAC1B,sBAAMA,UAAU,mBAAkB,wBAClC,uBAAOA,UAAU,cAAcyC,KAAK,OAAOE,SAAU,SAACzC,GAAU4D,EAAa5D,EAAIoC,OAAOM,MAAO,EAAGA,MAAOiB,OAG7G,yBAAQlB,SAAU,SAACzC,GAAU8D,EAAY9D,EAAIoC,OAAOM,MAAO,EAAE,UACzD,wBAAQA,MAAM,GAAE,iCAChB,wBAAQA,MAAM,OAAM,kBACpB,wBAAQA,MAAM,UAAS,qBACvB,wBAAQA,MAAM,MAAK,oBAEvB,yBAAQD,SAtCY,SAACzC,GAC7B,IAAMwE,EAAaxE,EAAIoC,OAAOM,MAC9BsB,EAAUQ,GACNvB,GACAvB,EFhCL,SAA0BhC,EAAIuE,EAAMjB,EAAUyB,GACjD,MAAO,CACHlC,KAAMvB,EACNqD,QAAS,CACL3E,KACAuE,OACAjB,WACAyB,gBAGZ,CEsBqBC,CAAiBhF,EAAIuE,EAAMF,EAAQS,GAEpD,EAiCgB9B,MAAOqB,EAAO,UACd,wBAAQrB,MAAM,GAAE,+BAChB,wBAAQA,MAAOQ,EAAW,GAAG,mBAC7B,wBAAQR,MAAOQ,EAAW,GAAG,yBAC7B,wBAAQR,MAAOQ,EAAW,GAAG,qBAKjC,uBAAOpD,UAAU,SAASyC,KAAK,eAK/C,C,MChHe,SAASoC,EAAM,GAAM,EAAJpC,KAAqC,IAA/BqC,EAAQ,EAARA,SAAUxB,EAAK,EAALA,MAAO7B,EAAS,EAATA,UAGnD,SAASsD,IACLtD,GAAU,EACd,CAEA,OACI,yBAASzB,UAAU,QAAO,SACtB,qBAAKA,UAAU,iBAAiBC,QAAS8E,EAAa,SAClD,sBAAK/E,UAAU,mBAAmBC,QAAS,SAAA+E,GAAC,OAAIA,EAAEC,iBAAiB,EAAC,UAChE,wBAAQjF,UAAU,sBAAsByC,KAAK,SAAS,aAAW,sEAAexC,QAAS8E,IACzF,oBAAI/E,UAAU,cAAa,SAAEsD,IAC5BwB,QAKrB,CChBe,SAASI,EAAQ,GAAsB,IAApBxD,EAAM,EAANA,OAAQK,EAAO,EAAPA,QAEtC,EAAgDD,oBAAS,GAAM,mBAAxDqD,EAAgB,KAAEC,EAAmB,KAI5C,OACI,sBAAKpF,UAAU,gBAAe,UAC1B,8BAAM+B,EAAQsD,OACd,wBAAQrF,UAAU,SAASC,QANd,WACjBmF,GAAoB,EACxB,EAIyD,mBACjD,cAACE,EAAQ,CAAC5D,OAAQA,EAAQK,QAASA,IAClCoD,EACG,cAAC,EAAK,CAAC7B,MAAM,kBAAiB,SAC1B,cAAC9B,EAAU,CAACC,UAAW2D,EAAqB1D,OAAQA,EAAQC,UAAWI,EAAQnC,OACxE,KAI3B,CClBe,SAAS0F,EAAS,GAAsB,IAG/CC,EAH2B7D,EAAM,EAANA,OAAQK,EAAO,EAAPA,QACvC,EAAsCD,oBAAS,GAAK,mBAA7C0D,EAAW,KAAEC,EAAc,KAC9BpB,EAAW/D,aAAY,SAAAH,GAAK,OAAIA,EAAMI,MAAM8D,SAASxD,IAAI,IAEzD6E,EAAkBpF,aAAY,SAAAH,GAAK,OAAIA,EAAMI,MAAMA,MAAMM,KAAKa,GAAQ2C,QAAQ,IAE9EkB,EADAxD,EACcA,EAAQsC,SAERqB,EAElBxD,qBAAU,WACFH,GACA0D,GAAgBD,EAExB,GAAG,IAMH,OACI,qCAIKzD,GAAWA,EAAQsC,SAAW,wBAAQrE,UAAU,SAASC,QATvC,WACvBwF,GAAgBD,EACpB,EAO8F,0BAAyB,GAC9GE,EAAgBC,QAAUJ,EAAYI,OAEnC,gCACM5D,EAAsD,GAA5C,oBAAI/B,UAAU,cAAa,sBACtCwF,EACGD,EAAY7E,KAAI,SAAAkF,GACZ,IAAMjF,EAAO0D,EAASuB,GACtB,OAAO,cAACV,EAAO,CAACnD,QAASpB,EAAMe,OAAQA,GAC3C,IACE,MAED,KAMzB,CC5Ce,SAASmE,EAAQ,GAAsB,IAApBC,EAAO,EAAPA,QAC9B,GAD6C,EAANpE,OACTI,oBAAS,IAAM,mBAAtCiE,EAAO,KAAEC,EAAU,KAC1BlF,QAAQC,IAAI+E,EAAQC,SACpB7D,qBAAU,WACN8D,EAAWF,EAAQC,QACvB,GAAG,IACHjF,QAAQC,IAAIgF,GACZ,IAAMnE,EAAWC,cAMjB,OACI,sBAAK7B,UAAU,gBAAe,UAC1B,wBAAOA,UAAU,WAAU,UACvB,uBAAOA,UAAU,kBAAkByC,KAAK,WAAWE,SARnC,SAACzC,GACzB,IAAM+F,GAAcF,EACpBC,EAAWC,GACXrE,ENiED,SAAsBhC,EAAImG,GAC7B,MAAO,CACHtD,KAAMlB,EACN3B,KACAmG,UAER,CMvEiBG,CAAaJ,EAAQlG,GAAIqG,GACtC,EAI8FF,QAASA,IAC3F,sBAAM/F,UAAU,2BAEpB,8BAAM8F,EAAQT,SAI1B,CCtBe,SAASc,EAAS,GAAa,IAAXzE,EAAM,EAANA,OAC3B0E,EAAW9F,aAAY,SAAAH,GAAK,OAAIA,EAAMI,MAAM+D,SAASzD,IAAI,IACzDwF,EAAc/F,aAAY,SAAAH,GAAK,OAAIA,EAAMI,MAAMA,MAAMM,KAAKa,GAAQ4C,QAAQ,IAE9E,OACI,mCACK+B,EAAYV,OAAS,qCAClB,oBAAI3F,UAAU,cAAa,sBAE3B,8BAEQqG,EAAY3F,KAAI,SAAAkF,GACZ,IAAMjF,EAAOyF,EAASR,GACtB,OAAO,cAACC,EAAO,CAACC,QAASnF,EAAMe,OAAQA,GAC3C,SAIN,IAGlB,CChBe,SAAS4E,EAAS,GAAiC,IAA/BnC,EAAI,EAAJA,KAAMjB,EAAQ,EAARA,SAAUE,EAAU,EAAVA,WAC/C,EAA0CtB,oBAAS,GAAM,mBAAlDyE,EAAa,KAAEC,EAAgB,KACtC,EAAgD1E,oBAAS,GAAM,mBAAxDqD,EAAgB,KAAEC,EAAmB,KAC5C,EAAgDtD,oBAAS,GAAM,mBAAxD2E,EAAgB,KAAEC,EAAmB,KAEtC9E,EAAWC,cAejB,OACI,qCACI,sBAAK7B,UAAU,aAAY,UACvB,8BAAMmE,EAAKC,SACX,oBAAIpE,UAAU,iBAAgB,SAAEmE,EAAKb,QACrC,mBAAGtD,UAAU,aAAY,SAAEmE,EAAKxE,cAChC,oBAAGK,UAAU,aAAY,cAAGmE,EAAKV,QACjC,oBAAGzD,UAAU,aAAY,cAAGmE,EAAKR,aACjC,oBAAG3D,UAAU,aAAY,cAAGmE,EAAKN,aACjC,oBAAG7D,UAAU,aAAY,cAAGmE,EAAKJ,YACjC,oBAAG/D,UAAU,aAAY,cAAGmE,EAAKwC,iBAEjC,sBAAK3G,UAAU,UAAS,UACpB,wBAAQA,UAAU,SAASC,QA1BlB,WACrBmF,GAAoB,EACxB,EAwBqE,yBACrD,wBAAQpF,UAAU,SAASC,QAxBlB,WACrByG,GAAoB,EACxB,EAsBqE,4BAGzD,sBAAK1G,UAAU,UAAS,UACpB,wBAAQA,UAAU,SAASC,QAzBtB,WACjB2B,ERqBD,SAAoBhC,EAAIsD,GAC3B,MAAO,CACHT,KAAMtB,EACNoD,QAAS,CACL3E,KACAsD,YAGZ,CQ7BiB0D,CAAWzC,EAAKvE,GAAIsD,GACjC,EAuBiE,oBACjD,wBAAQlD,UAAU,SAASC,QAvBxB,WACfuG,GAAiB,EACrB,EAqB+D,qBAEnD,cAAClB,EAAQ,CAAC5D,OAAQyC,EAAKvE,KACvB,cAACuG,EAAQ,CAACzE,OAAQyC,EAAKvE,QAG1B2G,EACG,cAAC,EAAK,CAACjD,MAAM,YAAY7B,UAAW+E,EAAiB,SACjD,cAACvD,EAAO,CAACC,SAAUA,EAAUzB,UAAW+E,EAAkBrD,QAASgB,EAAMf,WAAYA,MAC9E,GAEd+B,EACG,cAAC,EAAK,CAAC7B,MAAM,gBAAgB7B,UAAW2D,EAAoB,SACxD,cAAC5D,EAAU,CAACC,UAAW2D,EAAqB1D,OAAQyC,EAAKvE,OAClD,GAEd6G,EACG,cAAC,EAAK,CAACnD,MAAM,gBAAgB7B,UAAWiF,EAAoB,SACxD,cAAC7D,EAAU,CAACpB,UAAWiF,EAAqBhF,OAAQyC,EAAKvE,OAClD,KAI3B,CCnEe,SAASiH,IACpB,MAA0B/E,mBAAS,IAAG,mBAA/BgF,EAAK,KAAEC,EAAQ,KACtB,EAAkCjF,mBAAS,SAAQ,mBAA5CkF,EAAS,KAAEC,EAAY,KAC9B,EAAkCnF,mBAAS,QAAO,mBAA3CoF,EAAS,KAAEC,EAAY,KAC9B,EAAkDrF,mBAAS,IAAG,mBAAvDsF,EAAiB,KAAEC,EAAoB,KAC9C,EAAoCvF,oBAAS,GAAM,mBAA5CwF,EAAU,KAAEC,EAAa,KAE1B3F,EAAWC,cACb2F,EAAalH,aAAY,SAAAH,GAAK,OAAIA,EAAMI,MAAMkH,aAAa,IAoB/D,OACI,qCACI,oBAAIzH,UAAU,cAAa,oBAC3B,uBAAMA,UAAU,eAAeoC,SArBjB,SAAClC,GACnBA,EAAImC,iBACJkF,GAAc,GACVT,EACAlF,EToCL,SAAgBY,EAAQwE,GAC3B,MAAO,CACHvE,KAAMrB,EACNoB,SACAwE,YAER,CS1CqBU,CAAOZ,EAAOE,IAEvBK,EAAqB,6BAE7B,EAa+D,UACnD,uBAAOrH,UAAU,cAAa,SAC1B,uBAAOA,UAAU,cAAcyC,KAAMyE,EAAWvE,SAAU,SAACzC,GACvD6G,EAAS7G,EAAIoC,OAAOM,MACxB,EAAGA,MAAOkE,MAGd,yBAAQnE,SAnBQ,SAACzC,GACzB+G,EAAa/G,EAAIoC,OAAOM,OACC,WAArB1C,EAAIoC,OAAOM,MACXuE,EAAa,UAEbA,EAAa,OAErB,EAYkD,UAClC,wBAAQvE,MAAM,QAAO,6BACrB,wBAAQA,MAAM,SAAQ,iCAE1B,8BAAMwE,IACN,uBAAOpH,UAAU,SAASyC,KAAK,SAASG,MAAM,cAGjD0E,EACG,qCACI,oBAAItH,UAAU,cAAa,yBAC3B,qBAAKA,UAAU,cAAa,SACvBwH,EAAW9G,KAAI,SAAAC,GAAI,OAAI,cAAC2F,EAAQ,CAACnC,KAAMxD,GAAQ,SAGtD,KAIlB,CCtDe,SAASgH,EAAW,GAAsC,IAApCrE,EAAK,EAALA,MAAO1D,EAAE,EAAFA,GAAIgI,EAAQ,EAARA,SAAUxE,EAAU,EAAVA,WAClD7C,EAAQD,aAAY,SAAAH,GAAK,OAAIA,EAAMI,MAAMA,KAAK,IAClD,EAAsCuB,oBAAS,GAAM,mBAA9C+F,EAAW,KAAEC,EAAc,KAIlC,OACI,sBAAK9H,UAAU,eAAc,UACzB,oBAAIA,UAAU,cAAa,SAAEsD,IAC7B,wBAAQtD,UAAU,sBAAsBC,QAN3B,WACjB6H,GAAgBD,EACpB,EAIsE,sBAC9D,qBAAK7H,UAAU,aAAY,SACtB4H,EAASlH,KAAI,SAAAkF,GACV,IAAMjF,EAAOJ,EAAMM,KAAK+E,GACxB,OAAO,cAACU,EAAQ,CAACnC,KAAMxD,EAAMuC,SAAUtD,EAAI6B,UAAWqG,EAAgB1E,WAAYA,GACtF,MAGHyE,EACG,cAAC,EAAK,CAACvE,MAAM,WAAW7B,UAAWqG,EAAe,SAC9C,cAAC7E,EAAO,CAACC,SAAUtD,EAAI6B,UAAWqG,EAAgB1E,WAAYA,MACvD,KAG3B,CCxBe,SAAS2E,IACpB,IAIIrI,EAAaC,EAAaC,EAAIC,EAJ5BmI,EAAWC,cAEXC,EADSC,cACUvI,GACrBwI,EAAc9H,aAAY,SAAAH,GAAK,OAAIA,EAAMI,MAAMF,SAASQ,IAAI,IAAEqH,GAG9DE,GACA1I,EAAc0I,EAAY1I,YAC1BC,EAAcyI,EAAYzI,YAC1BC,EAAKwI,EAAYxI,GACjBC,EAAUuI,EAAYvI,UAEtBH,EAAcsI,EAAS7H,MAAMT,YAC7BC,EAAcqI,EAAS7H,MAAMR,YAC7BC,EAAKoI,EAAS7H,MAAMP,GACpBC,EAAUmI,EAAS7H,MAAMN,SAG7B,IAAIwI,EAAa/H,aAAY,SAAAH,GAAK,OAAIA,EAAMI,MAAMV,OAAO,IAEzD,OACI,qCACI,oBAAIG,UAAU,cAAa,SAAEN,IAC7B,mBAAGM,UAAU,aAAY,SAAEL,IAC3B,cAACkH,EAAM,IACP,qBAAK7G,UAAU,gBAAe,SACzBH,EAAQa,KAAI,SAAAkF,GACT,IAAMjF,EAAO0H,EAAWxH,KAAK+E,GAC7B,OAAO,cAAC+B,EAAU,CACd/H,GAAIe,EAAKf,GACTsI,UAAWtI,EACX0D,MAAO3C,EAAK2H,WACZV,SAAUjH,EAAKJ,MACf6C,WAAYvD,GAEpB,QAIhB,C,MC5Ce,SAAS0I,IACpB,OACI,8BACI,cAAC,IAAI,CAACvI,UAAU,mBAAmBwI,GAAG,IAAG,SAAC,6CAGtD,CCgBeC,MAff,WAGE,OACE,eAAC,IAAM,CAACC,SAAS,IAAG,UAClB,cAACH,EAAG,IACJ,eAAC,IAAM,WACL,cAAC,IAAK,CAACI,KAAK,IAAIC,OAAK,EAACC,QAAS,cAACzI,EAAY,MAC5C,cAAC,IAAK,CAACuI,KAAK,aAAaE,QAAS,cAACd,EAAS,WAKpD,E,6CCVMe,EAAmBC,KAAKC,MAAMC,aAAaC,QAAQ,UAuEnDC,EAAeL,EAAgB,eAAQA,GAAgB,eAtEnC,CACtBzI,SAAU,CACNQ,KAAM,CACF,aAAc,CACVnB,YAAa,WACbC,YAAa,4EACbC,GAAI,aACJC,QAAS,CAAC,aAAc,aAAc,eAE1C,aAAc,CACVH,YAAa,eACbC,YAAa,yDACbC,GAAI,aACJC,QAAS,CAAC,aAAc,aAAc,gBAG9CY,OAAQ,CAAC,aAAc,eAE3BZ,QAAS,CACLgB,KAAM,CACF,aAAc,CACVjB,GAAI,aACJ0I,WAAY,QACZ/H,MAAO,IAEX,aAAc,CACVX,GAAI,aACJ0I,WAAY,cACZ/H,MAAO,IAEX,aAAc,CACVX,GAAI,aACJ0I,WAAY,OACZ/H,MAAO,IAEX,aAAc,CACVX,GAAI,aACJ0I,WAAY,QACZ/H,MAAO,IAEX,aAAc,CACVX,GAAI,aACJ0I,WAAY,cACZ/H,MAAO,IAEX,aAAc,CACVX,GAAI,aACJ0I,WAAY,OACZ/H,MAAO,KAGfE,OAAQ,CAAC,aAAc,aAAc,aAAc,aAAc,aAAc,eAEnFF,MAAO,CACHM,KAAM,CAAC,EACPJ,OAAQ,GACR4C,UAAW,GAEfiB,SAAU,CACNzD,KAAM,CAAC,EACPJ,OAAQ,IAEZ4D,SAAU,CACNxD,KAAM,CAAC,EACPuI,QAAS,GACT3I,OAAQ,IAEZgH,cAAe,KC9EN4B,EAAcC,0BAAgB,CACvC/I,MDkFwB,WAAmC,IAAlCJ,EAAK,uDAAGgJ,EAAcI,EAAM,uCAErD,OAAQA,EAAO9G,MACX,KAAKzB,EACD,MAA+BuI,EAAOhF,QAA9BJ,EAAI,EAAJA,KAAMjB,EAAQ,EAARA,SAAUtD,EAAE,EAAFA,GAClB4J,EAAcrJ,EAAMN,QAAQgB,KAE5B4I,EAAQ,2BACPtJ,GAAK,IACRN,QAAS,CACLgB,KAAK,2BACE2I,GAAW,kBACbtG,EAAQ,2BACFsG,EAAYtG,IAAS,IACxB3C,MAAM,GAAD,mBAAMiJ,EAAYtG,GAAU3C,OAAK,CAAEX,SAIpDW,MAAM,2BACCJ,EAAMI,OAAK,IACdM,KAAK,2BACEV,EAAMI,MAAMM,MAAI,kBAClBjB,EAAKuE,IAEV1D,OAAO,GAAD,mBACCN,EAAMI,MAAME,QAAM,CACrBb,IAEJyD,UAAWqG,OAAOvJ,EAAMI,MAAM8C,WAAa,MAInD,OADA4F,aAAaU,QAAQ,QAASZ,KAAKa,UAAUH,IACtC,eACAA,GAEX,KAAKxI,EACD,OAAQ,WACJ,MAAqBsI,EAAOhF,QAApBJ,EAAI,EAAJA,KAAMvE,EAAE,EAAFA,GACR6J,EAAQ,2BACPtJ,GAAK,IACRI,MAAM,2BACCJ,EAAMI,OAAK,IACdM,KAAK,2BACEV,EAAMI,MAAMM,MAAI,kBAClBjB,EAAKuE,QAKlB,OADA8E,aAAaU,QAAQ,QAASZ,KAAKa,UAAUH,IACtC,eACAA,EAEX,CAhBQ,GAiBZ,KAAKvI,EACD,OAAQ,WAAO,IAAD,EACV,EAAuCqI,EAAOhF,QAAtC3E,EAAE,EAAFA,GAAIsD,EAAQ,EAARA,SAAUyB,EAAY,EAAZA,aAChB6E,EAAcrJ,EAAMN,QAAQgB,KAC5BgJ,EAAgB1J,EAAMN,QAAQgB,KAAKqC,GAAU3C,MAC7CuJ,EAAgB3J,EAAMN,QAAQgB,KAAK8D,GAAcpE,MAEjDwJ,EAAmBF,EAAcG,WAAU,SAAArJ,GAAI,OAAIA,IAASf,CAAE,IAE9DqK,EAAkB,sBACjBJ,EAAcK,MAAM,EAAGH,IAAiB,YACxCF,EAAcK,MAAMH,EAAmB,KAGxCN,EAAQ,2BACPtJ,GAAK,IACRN,QAAS,CACLgB,KAAK,2BACE2I,GAAW,uBACbtG,EAAQ,2BACFsG,EAAYtG,IAAS,IACxB3C,MAAO0J,KAAkB,cAE5BtF,EAAY,2BACN6E,EAAY7E,IAAa,IAC5BpE,MAAM,GAAD,mBAAMuJ,GAAa,CAAElK,OAAG,KAIzCW,MAAM,2BACCJ,EAAMI,OAAK,IACdM,KAAK,2BACEV,EAAMI,MAAMM,MAAI,kBAClBjB,EAAE,2BACIO,EAAMI,MAAMM,KAAKjB,IAAG,IACvBqE,OAAQU,UAOxB,OADAsE,aAAaU,QAAQ,QAASZ,KAAKa,UAAUH,IACtC,eACAA,EAEX,CA5CQ,GA6CZ,KAAKtI,EACD,OAAQ,WACJ,MAAyBoI,EAAOhF,QAAxBrB,EAAQ,EAARA,SAAUtD,EAAE,EAAFA,GACZ4J,EAAcrJ,EAAMN,QAAQgB,KAC5BuC,EAAajD,EAAMN,QAAQgB,KAAKqC,GAAU3C,MAC1CqH,EAAWzH,EAAMI,MAAME,OAI7B,EAHcN,EAAMI,MAGoBM,KAApBsJ,GAAL,EAANvK,GAAoB,eAApBA,GAAE,WAELwK,EAAcxC,EAASoC,WAAU,SAAArJ,GAAI,OAAIA,IAASf,CAAE,IACpDyK,EAAgBjH,EAAW4G,WAAU,SAAArJ,GAAI,OAAIA,IAASf,CAAE,IAExD0K,EAAe,sBACdlH,EAAW8G,MAAM,EAAGG,IAAc,YAClCjH,EAAW8G,MAAMG,EAAgB,KAElCE,EAAY,sBACX3C,EAASsC,MAAM,EAAGE,IAAY,YAC9BxC,EAASsC,MAAME,EAAc,KAE9BX,EAAQ,2BACPtJ,GAAK,IACRN,QAAS,CACLgB,KAAK,2BACE2I,GAAW,kBACbtG,EAAQ,2BACFsG,EAAYtG,IAAS,IACxB3C,MAAO+J,OAKnB/J,MAAM,2BACCJ,EAAMI,OAAK,IACdM,KAAK,eACEsJ,GAEP1J,OAAO,YACA8J,OAMf,OADAtB,aAAaU,QAAQ,QAASZ,KAAKa,UAAUH,IACtC,eACAA,EAEX,CAhDQ,GAiDZ,KAAKrI,EACD,OAAQ,WACJ,IAIIqG,EAJIjF,EAAsB+G,EAAtB/G,OAAQwE,EAAcuC,EAAdvC,UACVwD,EAAW,eAAQrK,EAAMI,MAAMM,MAC/B4J,EAAYC,OAAOC,OAAOH,GAiBhC,OAbI/C,EADc,UAAdT,EACgB,CAACyD,EAAUG,QAAO,SAAAjK,GAC9B,GAAIA,EAAK2C,MAAMuH,cAAcC,QAAQtI,EAAOqI,gBAAkB,GAAKrI,EAAOmD,QAAU,EAChF,OAAOhF,CAEf,KAEgB,CAAC8J,EAAUG,QAAO,SAAAjK,GAC9B,GAAIA,EAAKyD,SAAWsF,OAAOlH,GACvB,OAAO7B,CAEf,KAGG,2BACAR,GAAK,IACRsH,cAAeA,EAAc,IAErC,CAxBQ,GAyBZ,KAAKpG,EACD,OAAQ,WACJ,IAOIoI,EAEW,EATPjH,EAAkC+G,EAAlC/G,OAAQ5C,EAA0B2J,EAA1B3J,GAAI8B,EAAsB6H,EAAtB7H,OAAQC,EAAc4H,EAAd5H,UAEtBoJ,EAAa,CACf1F,KAAM7C,EACN5C,GAAIA,EACJyE,SAAU,IAIV1C,EACA8H,EAAQ,2BACDtJ,GAAK,IAERkE,SAAS,2BACFlE,EAAMkE,UAAQ,IACjBxD,KAAK,2BACEV,EAAMkE,SAASxD,MAAI,uBACrBjB,EAAKmL,GAAU,cACfpJ,EAAS,2BACHxB,EAAMkE,SAASxD,KAAKc,IAAU,IACjC0C,SAAS,GAAD,mBAAMlE,EAAMkE,SAASxD,KAAKc,GAAW0C,UAAQ,CAAEzE,OAAG,IAGlEa,OAAO,GAAD,mBACCN,EAAMkE,SAAS5D,QAAM,CAAEb,QAMtC6J,EAAQ,2BACDtJ,GAAK,IAERI,MAAM,2BACCJ,EAAMI,OAAK,IACdM,KAAK,2BACEV,EAAMI,MAAMM,MAAI,kBAClBa,EAAM,2BACAvB,EAAMI,MAAMM,KAAKa,IAAO,IAC3B2C,SAAS,GAAD,mBAAMlE,EAAMI,MAAMM,KAAKa,GAAQ2C,UAAQ,CAAEzE,UAI7DyE,SAAS,2BACFlE,EAAMkE,UAAQ,IACjBxD,KAAK,2BACEV,EAAMkE,SAASxD,MAAI,kBACrBjB,EAAKmL,IAEVtK,OAAO,GAAD,mBACCN,EAAMkE,SAAS5D,QAAM,CAAEb,IAE9BwJ,QAAQ,GAAD,mBACAjJ,EAAMkE,SAAS5D,QAAM,CAAEb,QAM1C,OADAqJ,aAAaU,QAAQ,QAASZ,KAAKa,UAAUH,IACtC,eACAA,EAEX,CA/DQ,GAgEZ,KAAKnI,EACD,OAAQ,WACJ,IAOImI,EAPI3G,EAAwByG,EAAxBzG,QAASlD,EAAe2J,EAAf3J,GAAI8B,EAAW6H,EAAX7H,OAEfsJ,EAAa,CACf3F,KAAMvC,EACNlD,GAAIA,EACJmG,SAAS,GA8Bb,OA1BA0D,EAAQ,2BACDtJ,GAAK,IAERI,MAAM,2BACCJ,EAAMI,OAAK,IACdM,KAAK,2BACEV,EAAMI,MAAMM,MAAI,kBAClBa,EAAM,2BACAvB,EAAMI,MAAMM,KAAKa,IAAO,IAC3B4C,SAAS,GAAD,mBAAMnE,EAAMI,MAAMM,KAAKa,GAAQ4C,UAAQ,CAAE1E,UAI7D0E,SAAS,2BACFnE,EAAMmE,UAAQ,IACjBzD,KAAK,2BACEV,EAAMmE,SAASzD,MAAI,kBACrBjB,EAAKoL,IAEVvK,OAAO,GAAD,mBACCN,EAAMmE,SAAS7D,QAAM,CAAEb,QAKtCqJ,aAAaU,QAAQ,QAASZ,KAAKa,UAAUH,IACtC,eACAA,EAEX,CAvCQ,GAwCZ,KAAKlI,EACD,OAAQ,WACJ,IAEIkI,EAFI7J,EAAgB2J,EAAhB3J,GAAImG,EAAYwD,EAAZxD,QAuBZ,OAnBA0D,EAAQ,2BACDtJ,GAAK,IAERI,MAAM,eACCJ,EAAMI,OAEb+D,SAAS,2BACFnE,EAAMmE,UAAQ,IACjBzD,KAAK,2BACEV,EAAMmE,SAASzD,MAAI,kBACrBjB,EAAE,2BACIO,EAAMmE,SAASzD,KAAKjB,IAAG,IAC1BmG,QAASA,UAMzBkD,aAAaU,QAAQ,QAASZ,KAAKa,UAAUH,IACtC,eACAA,EAEX,CA3BQ,GA4BZ,QACI,OAAOtJ,EAGnB,I,QEvYM8K,G,MAAQC,sBAAY7B,EAAa8B,8BACrCC,+BAKFC,IAASC,OAEP,cAAC,IAAQ,CAACL,MAAOA,EAAM,SACrB,cAAC,EAAG,MAENM,SAASC,eAAe,Q","file":"static/js/main.3685840a.chunk.js","sourcesContent":["import React from 'react'\nimport { useNavigate } from 'react-router-dom';\n\nexport default function ProjectItem({ projectName, description, id, columns }) {\n    const navigate = useNavigate();\n    const clickHandler = (evt) => {\n        navigate(`/todos/${id}`, {\n            state: {\n                id: id,\n                projectName: projectName,\n                description: description,\n                columns: columns\n            }\n        })\n    }\n    return (\n        <div className=\"todo__item\" onClick={clickHandler}>\n            <h2 className=\"todo__title\">{projectName}</h2>\n            <p className=\"todo__text\">{description}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport ProjectItem from '../components/ProjectItem'\n\nexport default function ProjectsPage() {\n    let projects = useSelector(state => state.todos.projects);\n    let projectsIds = useSelector(state => state.todos.projects.allIds);\n    return (\n        <div>\n            <h2 className=\"todo__title\">Projects</h2>\n            <div className='todo__projects'>\n                {projectsIds.map(item => {\n                    const project = projects.byId[item];\n                    console.log(project)\n                    return <ProjectItem description={project.description} id={project.id} columns={project.columns} projectName={project.projectName} />\n                })}\n            </div>\n\n        </div>\n    )\n}\n","\nexport const ADD_TODO = 'TODOS/ADD_TODO'\nexport const EDIT_TODO = 'TODOS/EDIT_TODO'\nexport const CHANGE_TODO_COLUMN = 'TODOS/CHANGE_TODO_COLUMN'\nexport const REMOVE_TODO = 'TODOS/REMOVE_TODO'\nexport const SEARCH = 'TODOS/SEARCH'\nexport const ADD_COMMENT = 'TODOS/ADD_COMMENT'\nexport const ADD_SUBTASK = 'TODOS/ADD_SUBTASK'\nexport const CHECK_SUBTASK = 'TODOS/CHECK_SUBTASK'\n","import { nanoid } from 'nanoid';\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch } from \"react-redux\";\nimport { addComment } from '../redux/actions';\n\nexport default function AddComment({ showModal, todoId, commentId }) {\n    const dispatch = useDispatch();\n    const [comment, setComment] = useState('');\n\n    const [id, setId] = useState(\"\");\n    useEffect(() => {\n        setId(nanoid())\n    }, [])\n\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        evt.target.reset();\n        // reset form\n        showModal(false)\n        dispatch(addComment(comment, id, todoId, commentId))\n\n    }\n    return (\n        <form className=\"todo__form\" onSubmit={handleSubmit}>\n            <label className=\"todo__label\">\n                <span className=\"todo__label-text\">Comment</span>\n                <input className=\"todo__input\" type=\"text\" onChange={(evt) => { setComment(evt.target.value) }} value={comment} />\n            </label>\n\n            <input className=\"button\" type=\"submit\" />\n        </form>\n    )\n}\n","import {\n    ADD_TODO,\n    REMOVE_TODO,\n    EDIT_TODO,\n    CHANGE_TODO_COLUMN,\n    SEARCH,\n    ADD_COMMENT,\n    ADD_SUBTASK,\n    CHECK_SUBTASK\n} from './types';\n\n\nexport function addTodo(id, todo, columnId) {\n    return {\n        type: ADD_TODO,\n        payload: {\n            id,\n            todo,\n            columnId\n        }\n    }\n}\n\nexport function editTodo(id, todo, columnId) {\n    return {\n        type: EDIT_TODO,\n        payload: {\n            id,\n            todo,\n            columnId\n        }\n    }\n}\n\nexport function changeTodoColumn(id, todo, columnId, nextColumnId) {\n    return {\n        type: CHANGE_TODO_COLUMN,\n        payload: {\n            id,\n            todo,\n            columnId,\n            nextColumnId\n        }\n    }\n}\nexport function removeTodo(id, columnId) {\n    return {\n        type: REMOVE_TODO,\n        payload: {\n            id,\n            columnId\n        }\n    }\n}\n\nexport function search(string, queryType) {\n    return {\n        type: SEARCH,\n        string,\n        queryType\n    }\n}\n\nexport function addComment(string, id, todoId, commentId) {\n    return {\n        type: ADD_COMMENT,\n        string,\n        id,\n        todoId,\n        commentId\n    }\n}\nexport function addSubtask(subtask, id, todoId) {\n    return {\n        type: ADD_SUBTASK,\n        subtask,\n        id,\n        todoId,\n    }\n}\nexport function checkSubtask(id, checked) {\n    return {\n        type: CHECK_SUBTASK,\n        id,\n        checked\n    }\n}","import { nanoid } from 'nanoid';\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch } from \"react-redux\";\nimport { addSubtask } from '../redux/actions';\n\nexport default function AddSubtask({ showModal, todoId, commentId }) {\n    const dispatch = useDispatch();\n    const [subtask, setSubtask] = useState('');\n\n    const [id, setId] = useState(\"\");\n    useEffect(() => {\n        setId(nanoid())\n    }, [])\n\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        evt.target.reset();\n        // reset form\n        showModal(false)\n        dispatch(addSubtask(subtask, id, todoId))\n        // dispatch(addSubtask(comment, id, todoId, commentId))\n\n    }\n    return (\n        <form className=\"todo__form\" onSubmit={handleSubmit}>\n            <label className=\"todo__label\">\n                <span className=\"todo__label-text\">Subtask</span>\n                <input className=\"todo__input\" type=\"text\" onChange={(evt) => { setSubtask(evt.target.value) }} value={subtask} />\n            </label>\n\n            <input className=\"button\" type=\"submit\" />\n        </form>\n    )\n}\n","import { nanoid } from 'nanoid';\nimport React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodo, changeTodoColumn, editTodo } from '../redux/actions';\n\nexport default function AddTodo({ columnId, showModal, oldTodo, columnsIds }) {\n    let lastIndex = useSelector(state => state.todos.todos.lastIndex);\n    const dispatch = useDispatch();\n\n    const [id, setId] = useState(\"\");\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [date, setDate] = useState(\"\");\n    const [timeTaken, setTimeTaken] = useState(\"\");\n    const [finalDate, setFinalDate] = useState(\"\");\n    const [priority, setPriority] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n\n    useEffect(() => {\n        if (oldTodo) {\n            setTitle(oldTodo.title);\n            setDescription(oldTodo.description);\n            setDate(oldTodo.date);\n            setTimeTaken(oldTodo.timeTaken);\n            setFinalDate(oldTodo.finalDate);\n            setPriority(oldTodo.priority);\n            setStatus(oldTodo.status);\n            setId(oldTodo.id)\n        } else {\n            setId(nanoid());\n            setStatus(columnId)\n        }\n\n    }, [])\n\n    const todo = {\n        id: id,\n        title: title,\n        number: lastIndex,\n        description: description,\n        date: date,\n        timeTaken: timeTaken,\n        finalDate: finalDate,\n        priority: priority,\n        comments: [],\n        // attachedFiles: [1, 2, 3],\n        status: status,\n        subTasks: [],\n    }\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        evt.target.reset();\n        // reset form\n        showModal(false)\n        if (oldTodo) {\n            dispatch(editTodo(id, todo, status))\n        } else {\n            dispatch(addTodo(id, todo, status))\n        }\n    }\n    const changeTodoColumnHandler = (evt) => {\n        const nextStatus = evt.target.value;\n        setStatus(nextStatus)\n        if (oldTodo) {\n            dispatch(changeTodoColumn(id, todo, status, nextStatus))\n        }\n    }\n    return (\n\n        <div>\n            <form className=\"todo__form\" onSubmit={handleSubmit}>\n                <label className=\"todo__label\">\n                    <span className=\"todo__label-text\">Title</span>\n                    <input className=\"todo__input\" type=\"text\" onChange={(evt) => { setTitle(evt.target.value) }} value={title} />\n                </label>\n                <label className=\"todo__label\">\n                    <span className=\"todo__label-text\">Description</span>\n                    <input className=\"todo__input\" type=\"text\" onChange={(evt) => { setDescription(evt.target.value) }} value={description} />\n                </label>\n                <label className=\"todo__label\">\n                    <span className=\"todo__label-text\">Date</span>\n                    <input className=\"todo__input\" type=\"date\" onChange={(evt) => { setDate(evt.target.value) }} value={date} />\n                </label>\n                <label className=\"todo__label\">\n                    <span className=\"todo__label-text\">Time taken</span>\n                    <input className=\"todo__input\" type=\"text\" onChange={(evt) => { setTimeTaken(evt.target.value) }} value={timeTaken} />\n                </label>\n                <label className=\"todo__label\">\n                    <span className=\"todo__label-text\">Final date</span>\n                    <input className=\"todo__input\" type=\"date\" onChange={(evt) => { setFinalDate(evt.target.value) }} value={finalDate} />\n                </label>\n\n                <select onChange={(evt) => { setPriority(evt.target.value) }}>\n                    <option value=\"\">--Choose priority--</option>\n                    <option value=\"high\">High</option>\n                    <option value=\"average\">Average</option>\n                    <option value=\"low\">Low</option>\n                </select>\n                <select onChange={changeTodoColumnHandler}\n                    value={status}>\n                    <option value=\"\">--Choose status--</option>\n                    <option value={columnsIds[0]}>Queue</option>\n                    <option value={columnsIds[1]}>Development</option>\n                    <option value={columnsIds[2]}>Done</option>\n                </select>\n                {/* <label>\n                    <input type=\"file\" onChange={(evt) => { console.log(evt.target.value) }} />\n                </label> */}\n                <input className=\"button\" type=\"submit\" />\n            </form>\n\n        </div>\n    )\n}\n","\nimport '../scss/Modal.scss';\n\nexport default function Modal({ type, children, title, showModal }) {\n\n\n    function onCloseModal() {\n        showModal(false)\n    }\n\n    return (\n        <section className=\"modal\">\n            <div className=\"modal__overlay\" onClick={onCloseModal}>\n                <div className=\"modal__container\" onClick={e => e.stopPropagation()}>\n                    <button className=\"modal__button-close\" type=\"button\" aria-label=\"Закрыть окно\" onClick={onCloseModal}></button>\n                    <h2 className=\"todo__title\">{title}</h2>\n                    {children}\n                </div>\n            </div>\n        </section>\n    )\n}\n","import React, { useState } from 'react'\nimport AddComment from './AddComment';\nimport Comments from './Comments';\nimport Modal from './Modal';\n\nexport default function Comment({ todoId, comment }) {\n    // const { text, id } = comment;\n    const [showCommentModal, setShowCommentModal] = useState(false)\n    const clickHandler = () => {\n        setShowCommentModal(true)\n    }\n    return (\n        <div className='todo__comment'>\n            <div>{comment.text}</div>\n            <button className=\"button\" onClick={clickHandler}>reply</button>\n            <Comments todoId={todoId} comment={comment} />\n            {showCommentModal ?\n                <Modal title=\"Reply a comment\">\n                    <AddComment showModal={setShowCommentModal} todoId={todoId} commentId={comment.id} />\n                </Modal> : \"\"\n            }\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport Comment from './Comment';\n\n\nexport default function Comments({ todoId, comment }) {\n    const [showReplies, setShowReplies] = useState(true)\n    let comments = useSelector(state => state.todos.comments.byId);\n    let commentsIds;\n    let postCommentsIds = useSelector(state => state.todos.todos.byId[todoId].comments);\n    if (comment) {\n        commentsIds = comment.comments;\n    } else {\n        commentsIds = postCommentsIds;\n    }\n    useEffect(() => {\n        if (comment) {\n            setShowReplies(!showReplies)\n        }\n    }, [])\n\n    const showRepliesHandler = () => {\n        setShowReplies(!showReplies)\n    }\n\n    return (\n        <>\n            {/* вот тут разобраться с отображением */}\n            {/* show/hide */}\n            {/* число комментариев */}\n            {comment && comment.comments ? <button className=\"button\" onClick={showRepliesHandler}>show replies</button> : ''}\n            {postCommentsIds.length || commentsIds.length ?\n\n                <div>\n                    {!comment ? <h4 className='todo__title'>Comments</h4> : ''}\n                    {showReplies ?\n                        commentsIds.map(i => {\n                            const item = comments[i];\n                            return <Comment comment={item} todoId={todoId} />\n                        })\n                        : ''\n                    }\n                </div> : ''\n\n            }\n\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { checkSubtask } from '../redux/actions';\n\nexport default function SubTodo({ subTodo, todoId }) {\n    const [checked, setChecked] = useState(false);\n    console.log(subTodo.checked)\n    useEffect(() => {\n        setChecked(subTodo.checked)\n    }, [])\n    console.log(checked)\n    const dispatch = useDispatch();\n    const checkSubtaskHandler = (evt) => {\n        const newChecked = !checked;\n        setChecked(newChecked);\n        dispatch(checkSubtask(subTodo.id, newChecked))\n    }\n    return (\n        <div className='todo__subtodo'>\n            <label className='checkbox'>\n                <input className='checkbox__input' type=\"checkbox\" onChange={checkSubtaskHandler} checked={checked} />\n                <span className='checkbox__indicator'></span>\n            </label>\n            <div>{subTodo.text}</div>\n        </div>\n\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport SubTodo from './SubTodo';\n\n\nexport default function SubTodos({ todoId }) {\n    let subTodos = useSelector(state => state.todos.subTasks.byId);\n    let subTodosIds = useSelector(state => state.todos.todos.byId[todoId].subTasks);\n\n    return (\n        <>\n            {subTodosIds.length ? <>\n                <h4 className='todo__title'>Subtodos</h4>\n\n                <div>\n                    {\n                        subTodosIds.map(i => {\n                            const item = subTodos[i];\n                            return <SubTodo subTodo={item} todoId={todoId} />\n                        })\n\n                    }\n                </div>\n            </> : ''}\n        </>\n    )\n}\n","import React, { useState } from 'react'\nimport { useDispatch } from \"react-redux\";\nimport { removeTodo } from '../redux/actions';\nimport AddComment from './AddComment';\nimport AddSubtask from './AddSubtask';\nimport AddTodo from './AddTodo';\nimport Comments from './Comments';\nimport SubTodos from './SubTodos'\nimport Modal from './Modal';\n\nexport default function TodoItem({ todo, columnId, columnsIds }) {\n    const [showEditModal, setShowEditModal] = useState(false)\n    const [showCommentModal, setShowCommentModal] = useState(false)\n    const [showSubtaskModal, setShowSubtaskModal] = useState(false)\n\n    const dispatch = useDispatch();\n\n    const handleAddComment = () => {\n        setShowCommentModal(true)\n    }\n    const handleAddSubtask = () => {\n        setShowSubtaskModal(true)\n    }\n    const handleDelete = () => {\n        dispatch(removeTodo(todo.id, columnId))\n    }\n    const handleEdit = () => {\n        setShowEditModal(true)\n    }\n\n    return (\n        <>\n            <div className='todo__item'>\n                <div>{todo.number}</div>\n                <h3 className='todo__subtitle'>{todo.title}</h3>\n                <p className='todo__text'>{todo.description}</p>\n                <p className='todo__text'> {todo.date}</p>\n                <p className='todo__text'> {todo.timeTaken}</p>\n                <p className='todo__text'> {todo.finalDate}</p>\n                <p className='todo__text'> {todo.priority}</p>\n                <p className='todo__text'> {todo.attachedFiles}</p>\n\n                <div className='buttons'>\n                    <button className=\"button\" onClick={handleAddComment}>add comment</button>\n                    <button className=\"button\" onClick={handleAddSubtask}>add subtask</button>\n                </div>\n\n                <div className='buttons'>\n                    <button className=\"button\" onClick={handleDelete}>delete</button>\n                    <button className=\"button\" onClick={handleEdit}>edit</button>\n                </div>\n                <Comments todoId={todo.id} />\n                <SubTodos todoId={todo.id} />\n            </div>\n\n            {showEditModal ?\n                <Modal title=\"Edit todo\" showModal={setShowEditModal}>\n                    <AddTodo columnId={columnId} showModal={setShowEditModal} oldTodo={todo} columnsIds={columnsIds} />\n                </Modal> : \"\"\n            }\n            {showCommentModal ?\n                <Modal title=\"Add a comment\" showModal={setShowCommentModal}>\n                    <AddComment showModal={setShowCommentModal} todoId={todo.id} />\n                </Modal> : \"\"\n            }\n            {showSubtaskModal ?\n                <Modal title=\"Add a subtask\" showModal={setShowSubtaskModal}>\n                    <AddSubtask showModal={setShowSubtaskModal} todoId={todo.id} />\n                </Modal> : \"\"\n            }\n        </>\n    )\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { search } from '../redux/actions';\nimport TodoItem from './TodoItem';\n\nexport default function Search() {\n    const [query, setQuery] = useState('');\n    const [queryType, setQueryType] = useState('title');\n    const [inputType, setInputType] = useState('text')\n    const [validationMessage, setValidationMessage] = useState('');\n    const [showResult, setShowResult] = useState(false)\n\n    const dispatch = useDispatch();\n    let foundTodos = useSelector(state => state.todos.searchedTodos);\n\n    const searchHandler = (evt) => {\n        evt.preventDefault();\n        setShowResult(true)\n        if (query) {\n            dispatch(search(query, queryType));\n        } else {\n            setValidationMessage('Your search query is empty')\n        }\n    }\n    const selectChangeHandler = (evt) => {\n        setQueryType(evt.target.value);\n        if (evt.target.value === \"number\") {\n            setInputType(\"number\")\n        } else {\n            setInputType(\"text\")\n        }\n    }\n\n    return (\n        <>\n            <h3 className='todo__title'>Search</h3>\n            <form className=\"todo__search\" onSubmit={searchHandler}>\n                <label className=\"todo__label\">\n                    <input className=\"todo__input\" type={inputType} onChange={(evt) => {\n                        setQuery(evt.target.value)\n                    }} value={query} />\n                </label>\n\n                <select onChange={selectChangeHandler}>\n                    <option value=\"title\">Search by title</option>\n                    <option value=\"number\">Search by number</option>\n                </select>\n                <div>{validationMessage}</div>\n                <input className=\"button\" type=\"submit\" value=\"search\" />\n            </form>\n\n            {showResult ?\n                <>\n                    <h3 className='todo__title'>Found todos</h3>\n                    <div className='todo__found'>\n                        {foundTodos.map(item => <TodoItem todo={item} />)}\n                    </div>\n                </>\n                : ''}\n        </>\n\n    )\n}\n","import React from 'react'\nimport { useState } from 'react'\nimport { useSelector } from \"react-redux\";\nimport TodoItem from './TodoItem';\nimport Modal from './Modal'\nimport AddTodo from './AddTodo'\n\n\nexport default function TodoColumn({ title, id, todosIds, columnsIds }) {\n    let todos = useSelector(state => state.todos.todos);\n    const [showAddTodo, setShowAddTodo] = useState(false)\n    const addTodoClick = () => {\n        setShowAddTodo(!showAddTodo)\n    }\n    return (\n        <div className='todo__column'>\n            <h2 className='todo__title'>{title}</h2>\n            <button className=\"todo__button button\" onClick={addTodoClick}>Add todo</button>\n            <div className='todo__list'>\n                {todosIds.map(i => {\n                    const item = todos.byId[i];\n                    return <TodoItem todo={item} columnId={id} showModal={setShowAddTodo} columnsIds={columnsIds} />\n                })}\n\n            </div>\n            {showAddTodo ?\n                <Modal title=\"Add todo\" showModal={setShowAddTodo}>\n                    <AddTodo columnId={id} showModal={setShowAddTodo} columnsIds={columnsIds} />\n                </Modal> : \"\"}\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { useLocation, useParams } from 'react-router-dom'\nimport Search from '../components/Search';\nimport TodoColumn from '../components/TodoColumn';\n\n\nexport default function TodosPage() {\n    const location = useLocation();\n    const params = useParams();\n    const projectId = params.id;\n    let projectInfo = useSelector(state => state.todos.projects.byId)[projectId];\n    let projectName, description, id, columns;\n\n    if (projectInfo) {\n        projectName = projectInfo.projectName;\n        description = projectInfo.description;\n        id = projectInfo.id;\n        columns = projectInfo.columns;\n    } else {\n        projectName = location.state.projectName;\n        description = location.state.description;\n        id = location.state.id;\n        columns = location.state.columns;\n    }\n\n    let columnsArr = useSelector(state => state.todos.columns);\n\n    return (\n        <>\n            <h2 className=\"todo__title\">{projectName}</h2>\n            <p className=\"todo__text\">{description}</p>\n            <Search />\n            <div className='todo__columns'>\n                {columns.map(i => {\n                    const item = columnsArr.byId[i];\n                    return <TodoColumn\n                        id={item.id}\n                        projectId={id}\n                        title={item.columnName}\n                        todosIds={item.todos}\n                        columnsIds={columns}\n                    />\n                })}\n            </div>\n        </>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Nav() {\n    return (\n        <div>\n            <Link className='todo__main-title' to=\"/\"><h1>Todo app</h1></Link>\n        </div>\n    )\n}\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport ProjectsPage from \"./pages/ProjectsPage\";\nimport TodosPage from \"./pages/TodosPage\";\nimport './App.scss';\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n\n\n  return (\n    <Router basename='/'>\n      <Nav />\n      <Routes>\n        <Route path=\"/\" exact element={<ProjectsPage />} />\n        <Route path=\"/todos/:id\" element={<TodosPage />} />\n      </Routes>\n    </Router>\n\n  );\n}\n\nexport default App;\n","\n\nimport {\n    ADD_TODO,\n    REMOVE_TODO,\n    EDIT_TODO,\n    CHANGE_TODO_COLUMN,\n    SEARCH,\n    ADD_COMMENT,\n    ADD_SUBTASK,\n    CHECK_SUBTASK\n} from \"../redux/types\";\n\nconst localStoredState = JSON.parse(localStorage.getItem('state'));\nconst initialLocalState = {\n    projects: {\n        byId: {\n            \"4f90d13a40\": {\n                projectName: \"Book App\",\n                description: \"App for discovering new books and sharing opinin about the books you read\",\n                id: \"4f90d13a40\",\n                columns: [\"4f90d13a41\", \"4f90d13a42\", \"4f90d13a43\"]\n            },\n            \"4f90d13a44\": {\n                projectName: \"Pet Food App\",\n                description: \"App for ordering pet food and sharing opinion about it\",\n                id: \"4f90d13a41\",\n                columns: [\"4f90d13a45\", \"4f90d13a46\", \"4f90d13a47\"]\n            }\n        },\n        allIds: [\"4f90d13a40\", \"4f90d13a44\"]\n    },\n    columns: {\n        byId: {\n            \"4f90d13a41\": {\n                id: \"4f90d13a41\",\n                columnName: \"Queue\",\n                todos: [],\n            },\n            \"4f90d13a42\": {\n                id: \"4f90d13a42\",\n                columnName: \"Development\",\n                todos: [],\n            },\n            \"4f90d13a43\": {\n                id: \"4f90d13a43\",\n                columnName: \"Done\",\n                todos: [],\n            },\n            \"4f90d13a45\": {\n                id: \"4f90d13a45\",\n                columnName: \"Queue\",\n                todos: [],\n            },\n            \"4f90d13a46\": {\n                id: \"4f90d13a46\",\n                columnName: \"Development\",\n                todos: [],\n            },\n            \"4f90d13a47\": {\n                id: \"4f90d13a47\",\n                columnName: \"Done\",\n                todos: [],\n            },\n        },\n        allIds: [\"4f90d13a41\", \"4f90d13a42\", \"4f90d13a43\", \"4f90d13a45\", \"4f90d13a46\", \"4f90d13a47\"]\n    },\n    todos: {\n        byId: {},\n        allIds: [],\n        lastIndex: 1\n    },\n    subTasks: {\n        byId: {},\n        allIds: []\n    },\n    comments: {\n        byId: {},\n        postIds: [],\n        allIds: []\n    },\n    searchedTodos: [],\n}\n\nconst initialState = localStoredState ? { ...localStoredState } : { ...initialLocalState };\n\nexport const todosReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_TODO:\n            const { todo, columnId, id } = action.payload;\n            const columnsById = state.columns.byId;\n\n            const newState = {\n                ...state,\n                columns: {\n                    byId: {\n                        ...columnsById,\n                        [columnId]: {\n                            ...columnsById[columnId],\n                            todos: [...columnsById[columnId].todos, id]\n                        }\n                    }\n                },\n                todos: {\n                    ...state.todos,\n                    byId: {\n                        ...state.todos.byId,\n                        [id]: todo\n                    },\n                    allIds: [\n                        ...state.todos.allIds,\n                        id\n                    ],\n                    lastIndex: Number(state.todos.lastIndex) + 1\n                }\n            }\n            localStorage.setItem('state', JSON.stringify(newState))\n            return {\n                ...newState\n            }\n        case EDIT_TODO:\n            return (() => {\n                const { todo, id } = action.payload;\n                const newState = {\n                    ...state,\n                    todos: {\n                        ...state.todos,\n                        byId: {\n                            ...state.todos.byId,\n                            [id]: todo\n                        }\n                    }\n                }\n                localStorage.setItem('state', JSON.stringify(newState))\n                return {\n                    ...newState\n                }\n            })()\n        case CHANGE_TODO_COLUMN:\n            return (() => {\n                const { id, columnId, nextColumnId } = action.payload;\n                const columnsById = state.columns.byId;\n                const oldColumnsIds = state.columns.byId[columnId].todos;\n                const newColumnsIds = state.columns.byId[nextColumnId].todos;\n\n                const oldColumnIdIndex = oldColumnsIds.findIndex(item => item === id);\n\n                const nextOldColumnTodos = [\n                    ...oldColumnsIds.slice(0, oldColumnIdIndex),\n                    ...oldColumnsIds.slice(oldColumnIdIndex + 1)\n                ];\n\n                const newState = {\n                    ...state,\n                    columns: {\n                        byId: {\n                            ...columnsById,\n                            [columnId]: {\n                                ...columnsById[columnId],\n                                todos: nextOldColumnTodos\n                            },\n                            [nextColumnId]: {\n                                ...columnsById[nextColumnId],\n                                todos: [...newColumnsIds, id]\n                            }\n                        }\n                    },\n                    todos: {\n                        ...state.todos,\n                        byId: {\n                            ...state.todos.byId,\n                            [id]: {\n                                ...state.todos.byId[id],\n                                status: nextColumnId\n                            }\n                        },\n                    }\n\n                }\n                localStorage.setItem('state', JSON.stringify(newState))\n                return {\n                    ...newState\n                }\n            })()\n        case REMOVE_TODO:\n            return (() => {\n                const { columnId, id } = action.payload;\n                const columnsById = state.columns.byId;\n                const columnsIds = state.columns.byId[columnId].todos;\n                const todosIds = state.todos.allIds;\n                const todos = state.todos;\n\n                // измнененный объект с todo\n                const { [id]: _, ...nextTodos } = todos.byId;\n\n                const todoIdIndex = todosIds.findIndex(item => item === id);\n                const columnIdIndex = columnsIds.findIndex(item => item === id);\n\n                const nextColumnTodos = [\n                    ...columnsIds.slice(0, columnIdIndex),\n                    ...columnsIds.slice(columnIdIndex + 1)\n                ];\n                const nextTodosIds = [\n                    ...todosIds.slice(0, todoIdIndex),\n                    ...todosIds.slice(todoIdIndex + 1)\n                ];\n                const newState = {\n                    ...state,\n                    columns: {\n                        byId: {\n                            ...columnsById,\n                            [columnId]: {\n                                ...columnsById[columnId],\n                                todos: nextColumnTodos\n                            }\n                        }\n                    },\n\n                    todos: {\n                        ...state.todos,\n                        byId: {\n                            ...nextTodos\n                        },\n                        allIds: [\n                            ...nextTodosIds\n                        ]\n                    }\n\n                }\n                localStorage.setItem('state', JSON.stringify(newState))\n                return {\n                    ...newState\n                }\n            })()\n        case SEARCH:\n            return (() => {\n                const { string, queryType } = action;\n                const todosObject = { ...state.todos.byId };\n                const todosList = Object.values(todosObject);\n\n                let searchedTodos;\n                if (queryType === \"title\") {\n                    searchedTodos = [todosList.filter(item => {\n                        if (item.title.toLowerCase().indexOf(string.toLowerCase()) >= 0 || string.length <= 0) {\n                            return item;\n                        }\n                    })]\n                } else {\n                    searchedTodos = [todosList.filter(item => {\n                        if (item.number === Number(string)) {\n                            return item;\n                        }\n                    })]\n                }\n\n                return {\n                    ...state,\n                    searchedTodos: searchedTodos[0]\n                }\n            })();\n        case ADD_COMMENT:\n            return (() => {\n                const { string, id, todoId, commentId } = action;\n\n                const newComment = {\n                    text: string,\n                    id: id,\n                    comments: []\n                }\n                let newState;\n                // если комментарий на комментарий\n                if (commentId) {\n                    newState = {\n                        ...state,\n\n                        comments: {\n                            ...state.comments,\n                            byId: {\n                                ...state.comments.byId,\n                                [id]: newComment,\n                                [commentId]: {\n                                    ...state.comments.byId[commentId],\n                                    comments: [...state.comments.byId[commentId].comments, id]\n                                }\n                            },\n                            allIds: [\n                                ...state.comments.allIds, id\n                            ]\n                        }\n                    }\n                } else {\n\n                    newState = {\n                        ...state,\n\n                        todos: {\n                            ...state.todos,\n                            byId: {\n                                ...state.todos.byId,\n                                [todoId]: {\n                                    ...state.todos.byId[todoId],\n                                    comments: [...state.todos.byId[todoId].comments, id]\n                                }\n                            },\n                        },\n                        comments: {\n                            ...state.comments,\n                            byId: {\n                                ...state.comments.byId,\n                                [id]: newComment\n                            },\n                            allIds: [\n                                ...state.comments.allIds, id\n                            ],\n                            postIds: [\n                                ...state.comments.allIds, id\n                            ]\n                        }\n                    }\n                }\n                localStorage.setItem('state', JSON.stringify(newState))\n                return {\n                    ...newState\n                }\n            })()\n        case ADD_SUBTASK:\n            return (() => {\n                const { subtask, id, todoId } = action;\n\n                const newSubTask = {\n                    text: subtask,\n                    id: id,\n                    checked: false\n                }\n                let newState;\n\n                newState = {\n                    ...state,\n\n                    todos: {\n                        ...state.todos,\n                        byId: {\n                            ...state.todos.byId,\n                            [todoId]: {\n                                ...state.todos.byId[todoId],\n                                subTasks: [...state.todos.byId[todoId].subTasks, id]\n                            }\n                        },\n                    },\n                    subTasks: {\n                        ...state.subTasks,\n                        byId: {\n                            ...state.subTasks.byId,\n                            [id]: newSubTask\n                        },\n                        allIds: [\n                            ...state.subTasks.allIds, id\n                        ],\n                    }\n                }\n\n                localStorage.setItem('state', JSON.stringify(newState))\n                return {\n                    ...newState\n                }\n            })()\n        case CHECK_SUBTASK:\n            return (() => {\n                const { id, checked } = action;\n\n                let newState;\n\n                newState = {\n                    ...state,\n\n                    todos: {\n                        ...state.todos,\n                    },\n                    subTasks: {\n                        ...state.subTasks,\n                        byId: {\n                            ...state.subTasks.byId,\n                            [id]: {\n                                ...state.subTasks.byId[id],\n                                checked: checked\n                            }\n                        },\n                    }\n                }\n\n                localStorage.setItem('state', JSON.stringify(newState))\n                return {\n                    ...newState\n                }\n            })()\n        default:\n            return state;\n    }\n\n}","import { combineReducers } from \"redux\";\nimport { todosReducer } from \"../features/todosSlice\";\n\nexport const rootReducer = combineReducers({\n    todos: todosReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { rootReducer } from './redux/rootReducer';\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport './reset.scss';\n\nconst store = createStore(rootReducer, composeWithDevTools(\n  applyMiddleware(\n    // saga\n  ),\n))\n\nReactDOM.render(\n  // харнилище - стор\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}